// Decompiled with JetBrains decompiler
// Type: _8890DTest.TestModWin
// Assembly: TH-UV98, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 08C2362D-09D4-47BA-95BA-76236319AA37
// Assembly location: C:\UV98 V1.00\Uv98_SoftWare_Eng\TH-UV98.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.IO.Ports;
using System.Threading;
using System.Timers;
using System.Windows.Forms;

namespace _8890DTest
{
  public class TestModWin : Form
  {
    private IContainer components = (IContainer) null;
    private GroupBox groupBox2;
    private GroupBox groupBox3;
    private NumericUpDown numericUpDown1;
    private Button button2;
    private Button button1;
    private GroupBox groupBox6;
    private Button button7;
    private Button button5;
    private Button button4;
    private GroupBox groupBox5;
    private ListBox listBox1;
    private GroupBox groupBox4;
    private Button button3;
    private ComboBox comboBox1;
    private Label label1;
    private TrackBar trackBar1;
    private Button button6;
    private DataGridView dataGridView1;
    private SerialPort serialPort1;
    private Button button8;
    private TabControl tabControl1;
    private TabPage tabPage1;
    private TabPage tabPage2;
    private DataGridView dataGridView2;
    private TabPage tabPage3;
    private DataGridView dataGridView3;
    private ComboBox comboBox4;
    private Button button9;
    private NumericUpDown numericUpDown2;
    private NumericUpDown numericUpDown3;
    private Button button10;
    private Button button11;
    private OpenFileDialog openFileDialog1;
    private RadioButton radioButton2;
    private RadioButton radioButton1;
    private TextBox textBox1;
    private Label label32;
    private NumericUpDown numericUpDown4;
    private static System.Timers.Timer aTimer1;
    public static string[,] DataGridName = new string[2, 12]
    {
      {
        "序号",
        "调整选项",
        "当前值",
        "默认值",
        "说明",
        "静噪模式",
        " 功率",
        "遇忙禁发 ",
        "步进",
        " 带宽",
        "可选信令",
        "信道名称"
      },
      {
        "No. ",
        "  Adj Item",
        "Cur Data",
        "  Default Data",
        "  Instruction",
        "Sql Tyep",
        "Power",
        "   B_Lock",
        "Step",
        "Wide",
        " Signal",
        " Ch Name"
      }
    };
    public static string[,] Button_EngCh = new string[2, 17]
    {
      {
        "确定",
        "取消",
        "发射开始",
        "发射结束",
        "重新检测端口",
        "进入测试模式",
        "批写所有频段(默认值)",
        "批写当前频段(默认值)",
        "退出",
        "写入当前值",
        "打开测试文件",
        "退出测试模式",
        "保存为默认值",
        "串口选择",
        "退出",
        "退出",
        "退出"
      },
      {
        "Enter",
        "Cancel",
        "Ptt Start",
        "Ptt Up",
        "Com Res",
        "Enter Test",
        "Write All",
        "Write Cur Band",
        "Exit",
        "Write Cur Data",
        "Open TestFile",
        "Exit TestMod",
        "Save Default",
        "Com Select",
        "退出",
        "退出",
        "退出"
      }
    };
    private string[,] MessBoxName = new string[2, 20]
    {
      {
        "当前串口",
        "：被占用,请选择其它串口！",
        "逻辑出错步聚:",
        "通信失败",
        "通信超时，请检查串口选择是否正确!",
        "非0XFD结束符！",
        "非握手应答指应",
        "非波特率应答指令",
        "读写频密码不正确！",
        "非读写频应答指令！",
        "非读频应答指令！",
        "非写频应答指令！",
        "通信成功!",
        "非通讯结束应答指令",
        "数据非法异常！",
        "通信超时",
        "非法异常",
        "当前无可用端口",
        "默认文件禁止替换:",
        "SendComDatPro事件指令:"
      },
      {
        "Comport",
        "：Occupancy!",
        "Logic code Error:",
        "Connect Error",
        "Connect TimeOut,Please Check Comport!",
        "Connect Error",
        "Connect Error",
        "Connect Error",
        "Code Error！",
        "Connect Error！",
        "Connect Error！",
        "Connect Error！",
        "Succeed!",
        "Connect Error",
        "Connect Error！",
        "Connect Error",
        "Connect Error",
        "No Comm",
        "Defalt File\t!",
        "SendComDatPro Even:"
      }
    };
    private int GbCommDelay = 15;
    private string[,] ConStrTable11 = new string[108, 6]
    {
      {
        "1",
        "TUNE 1",
        "255",
        "202",
        "134.025M",
        "NO"
      },
      {
        "2",
        "TUNE 2",
        "255",
        "202",
        "139.025M",
        "NO"
      },
      {
        "3",
        "TUNE 3",
        "255",
        "202",
        "144.025M",
        "NO"
      },
      {
        "4",
        "TUNE 4",
        "255",
        "202",
        "149.025M",
        "NO"
      },
      {
        "5",
        "TUNE 5",
        "255",
        "202",
        "154.025M",
        "NO"
      },
      {
        "6",
        "TUNE 6",
        "255",
        "202",
        "159.025M",
        "NO"
      },
      {
        "7",
        "TUNE 7",
        "255",
        "202",
        "164.025M",
        "NO"
      },
      {
        "8",
        "TUNE 8",
        "255",
        "202",
        "169.025M",
        "NO"
      },
      {
        "9",
        "TUNE 9",
        "255",
        "202",
        "173.975M",
        "NO"
      },
      {
        "10",
        "Sql_1 1",
        "255",
        "202",
        "134.025M",
        "NO"
      },
      {
        "11",
        "Sql_1 2",
        "255",
        "202",
        "154.025M",
        "NO"
      },
      {
        "12",
        "Sql_1 3",
        "255",
        "202",
        "173.975M",
        "NO"
      },
      {
        "13",
        "Sql_9 1",
        "255",
        "202",
        "134.025M",
        "NO"
      },
      {
        "14",
        "Sql_9 2",
        "255",
        "202",
        "154.025M",
        "NO"
      },
      {
        "15",
        "Sql_9 3",
        "255",
        "202",
        "173.975M",
        "NO"
      },
      {
        "16",
        "RSSI_1",
        "255",
        "202",
        "154.025M",
        "是"
      },
      {
        "17",
        "RSSI_FULL",
        "255",
        "202",
        "154.025M",
        "是"
      },
      {
        "18",
        "LOW 1",
        "255",
        "202",
        "134.000M",
        "NO"
      },
      {
        "19",
        "LOW 2",
        "255",
        "202",
        "136.000M",
        "NO"
      },
      {
        "20",
        "LOW 3",
        "255",
        "202",
        "138.000M",
        "NO"
      },
      {
        "21",
        "LOW 4",
        "255",
        "202",
        "140.000M",
        "NO"
      },
      {
        "22",
        "LOW 5",
        "255",
        "202",
        "142.000M",
        "NO"
      },
      {
        "23",
        "LOW 6",
        "255",
        "202",
        "144.000M",
        "NO"
      },
      {
        "24",
        "LOW 7",
        "255",
        "202",
        "146.000M",
        "NO"
      },
      {
        "25",
        "LOW 8",
        "255",
        "202",
        "148.000M",
        "NO"
      },
      {
        "26",
        "LOW 9",
        "255",
        "202",
        "150.000M",
        "NO"
      },
      {
        "27",
        "LOW 10",
        "255",
        "202",
        "152.000M",
        "NO"
      },
      {
        "28",
        "LOW 11",
        "255",
        "202",
        "154.000M",
        "NO"
      },
      {
        "29",
        "LOW 12",
        "255",
        "202",
        "156.000M",
        "NO"
      },
      {
        "30",
        "LOW 13",
        "255",
        "202",
        "158.000M",
        "NO"
      },
      {
        "31",
        "LOW 14",
        "255",
        "202",
        "160.000M",
        "NO"
      },
      {
        "32",
        "LOW 15",
        "255",
        "202",
        "162.000M",
        "NO"
      },
      {
        "33",
        "LOW 16",
        "255",
        "202",
        "164.000M",
        "NO"
      },
      {
        "34",
        "LOW 17",
        "255",
        "202",
        "166.000M",
        "NO"
      },
      {
        "35",
        "LOW 18",
        "255",
        "202",
        "168.000M",
        "NO"
      },
      {
        "36",
        "LOW 19",
        "255",
        "202",
        "170.000M",
        "NO"
      },
      {
        "37",
        "LOW 20",
        "255",
        "202",
        "172.000M",
        "NO"
      },
      {
        "38",
        "LOW 21",
        "255",
        "202",
        "174.000M",
        "NO"
      },
      {
        "39",
        "MID\t1",
        "255",
        "202",
        "134.000M",
        "NO"
      },
      {
        "40",
        "MID\t2",
        "255",
        "202",
        "136.000M",
        "NO"
      },
      {
        "41",
        "MID\t3",
        "255",
        "202",
        "138.000M",
        "否"
      },
      {
        "42",
        "MID\t4",
        "255",
        "202",
        "140.000M",
        "否"
      },
      {
        "43",
        "MID\t5",
        "255",
        "202",
        "142.000M",
        "否"
      },
      {
        "44",
        "MID\t6",
        "255",
        "202",
        "144.000M",
        "否"
      },
      {
        "45",
        "MID\t7",
        "255",
        "202",
        "146.000M",
        "否"
      },
      {
        "46",
        "MID\t8",
        "255",
        "202",
        "148.000M",
        "否"
      },
      {
        "47",
        "MID\t9",
        "255",
        "202",
        "150.000M",
        "否"
      },
      {
        "48",
        "MID\t10",
        "255",
        "202",
        "152.000M",
        "否"
      },
      {
        "49",
        "MID\t11",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "50",
        "MID\t12",
        "255",
        "202",
        "156.000M",
        "否"
      },
      {
        "51",
        "MID\t13",
        "255",
        "202",
        "158.000M",
        "否"
      },
      {
        "52",
        "MID\t14",
        "255",
        "202",
        "160.000M",
        "否"
      },
      {
        "53",
        "MID\t15",
        "255",
        "202",
        "162.000M",
        "否"
      },
      {
        "54",
        "MID\t16",
        "255",
        "202",
        "164.000M",
        "否"
      },
      {
        "55",
        "MID\t17",
        "255",
        "202",
        "166.000M",
        "否"
      },
      {
        "56",
        "MID\t18",
        "255",
        "202",
        "168.000M",
        "否"
      },
      {
        "57",
        "MID\t19",
        "255",
        "202",
        "170.000M",
        "否"
      },
      {
        "58",
        "MID\t20",
        "255",
        "202",
        "172.000M",
        "否"
      },
      {
        "59",
        "MID\t21",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "60",
        "HIG\t1",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "61",
        "HIG\t2",
        "255",
        "202",
        "136.000M",
        "否"
      },
      {
        "62",
        "HIG\t3",
        "255",
        "202",
        "138.000M",
        "否"
      },
      {
        "63",
        "HIG\t4",
        "255",
        "202",
        "140.000M",
        "否"
      },
      {
        "64",
        "HIG\t5",
        "255",
        "202",
        "142.000M",
        "否"
      },
      {
        "65",
        "HIG\t6",
        "255",
        "202",
        "144.000M",
        "否"
      },
      {
        "66",
        "HIG\t7",
        "255",
        "202",
        "146.000M",
        "否"
      },
      {
        "67",
        "HIG\t8",
        "255",
        "202",
        "148.000M",
        "否"
      },
      {
        "68",
        "HIG\t9",
        "255",
        "202",
        "150.000M",
        "否"
      },
      {
        "69",
        "HIG\t10",
        "255",
        "202",
        "152.000M",
        "否"
      },
      {
        "70",
        "HIG\t11",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "71",
        "HIG\t12",
        "255",
        "202",
        "156.000M",
        "否"
      },
      {
        "72",
        "HIG\t13",
        "255",
        "202",
        "158.000M",
        "否"
      },
      {
        "73",
        "HIG\t14",
        "255",
        "202",
        "160.000M",
        "否"
      },
      {
        "74",
        "HIG\t15",
        "255",
        "202",
        "162.000M",
        "否"
      },
      {
        "75",
        "HIG\t16",
        "255",
        "202",
        "164.000M",
        "否"
      },
      {
        "76",
        "HIG\t17",
        "255",
        "202",
        "166.000M",
        "否"
      },
      {
        "77",
        "HIG\t18",
        "255",
        "202",
        "168.000M",
        "否"
      },
      {
        "78",
        "HIG\t19",
        "255",
        "202",
        "170.000M",
        "否"
      },
      {
        "79",
        "HIG\t20",
        "255",
        "202",
        "172.000M",
        "否"
      },
      {
        "80",
        "HIG\t21",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "81",
        "DEV 1",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "82",
        "DEV 2",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "83",
        "DEV 3",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "84",
        "DCS 023N",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "85",
        "DCS 023N",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "86",
        "DCS 023N",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "87",
        "CTC 62.5HZ",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "88",
        "CTC 62.5HZ",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "89",
        "CTC 62.5HZ",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "90",
        "CTC 91.5HZ",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "91",
        "CTC 91.5HZ",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "92",
        "CTC  91.5HZ",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "93",
        "CTC 151.4HZ",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "94",
        "CTC 151.4HZ",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "95",
        "CTC 151.4HZ",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "96",
        "CTC 192.8HZ",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "97",
        "CTC  192.8HZ",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "98",
        "CTC  192.8HZ",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "99",
        "CTC 254.1HZ",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "100",
        "CTC  254.1HZ",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "101",
        "CTC  254.1HZ",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "102",
        "DTMF DEV1",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "103",
        "DTMF DEV2",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "104",
        "DTMF DEV3",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "105",
        "1750 DEV1",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "106",
        "1750 DEV2",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "107",
        "1750 DEV3",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "108",
        "Nar SQL",
        "255",
        "202",
        "154.025M",
        "否"
      }
    };
    private string[,] ConStrTable1 = new string[108, 6]
    {
      {
        "1",
        "接收灵敏度1",
        "255",
        "202",
        "134.025M",
        "否"
      },
      {
        "2",
        "接收灵敏度2",
        "255",
        "202",
        "139.025M",
        "否"
      },
      {
        "3",
        "接收灵敏度3",
        "255",
        "202",
        "144.025M",
        "否"
      },
      {
        "4",
        "接收灵敏度4",
        "255",
        "202",
        "149.025M",
        "否"
      },
      {
        "5",
        "接收灵敏度5",
        "255",
        "202",
        "154.025M",
        "否"
      },
      {
        "6",
        "接收灵敏度6",
        "255",
        "202",
        "159.025M",
        "否"
      },
      {
        "7",
        "接收灵敏度7",
        "255",
        "202",
        "164.025M",
        "否"
      },
      {
        "8",
        "接收灵敏度8",
        "255",
        "202",
        "169.025M",
        "否"
      },
      {
        "9",
        "接收灵敏度9",
        "255",
        "202",
        "173.975M",
        "否"
      },
      {
        "10",
        "1级静噪1",
        "255",
        "202",
        "134.025M",
        "否"
      },
      {
        "11",
        "1级静噪2",
        "255",
        "202",
        "154.025M",
        "否"
      },
      {
        "12",
        "1级静噪3",
        "255",
        "202",
        "173.975M",
        "否"
      },
      {
        "13",
        "9级静噪1",
        "255",
        "202",
        "134.025M",
        "否"
      },
      {
        "14",
        "9级静噪2",
        "255",
        "202",
        "154.025M",
        "否"
      },
      {
        "15",
        "9级静噪3",
        "255",
        "202",
        "173.975M",
        "否"
      },
      {
        "16",
        "1格场强指示",
        "255",
        "202",
        "154.025M",
        "是"
      },
      {
        "17",
        "满格场强指示",
        "255",
        "202",
        "154.025M",
        "是"
      },
      {
        "18",
        "低功率1",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "19",
        "低功率2",
        "255",
        "202",
        "136.000M",
        "否"
      },
      {
        "20",
        "低功率3",
        "255",
        "202",
        "138.000M",
        "否"
      },
      {
        "21",
        "低功率4",
        "255",
        "202",
        "140.000M",
        "否"
      },
      {
        "22",
        "低功率5",
        "255",
        "202",
        "142.000M",
        "否"
      },
      {
        "23",
        "低功率6",
        "255",
        "202",
        "144.000M",
        "否"
      },
      {
        "24",
        "低功率7",
        "255",
        "202",
        "146.000M",
        "否"
      },
      {
        "25",
        "低功率8",
        "255",
        "202",
        "148.000M",
        "否"
      },
      {
        "26",
        "低功率9",
        "255",
        "202",
        "150.000M",
        "否"
      },
      {
        "27",
        "低功率10",
        "255",
        "202",
        "152.000M",
        "否"
      },
      {
        "28",
        "低功率11",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "29",
        "低功率12",
        "255",
        "202",
        "156.000M",
        "否"
      },
      {
        "30",
        "低功率13",
        "255",
        "202",
        "158.000M",
        "否"
      },
      {
        "31",
        "低功率14",
        "255",
        "202",
        "160.000M",
        "否"
      },
      {
        "32",
        "低功率15",
        "255",
        "202",
        "162.000M",
        "否"
      },
      {
        "33",
        "低功率16",
        "255",
        "202",
        "164.000M",
        "否"
      },
      {
        "34",
        "低功率17",
        "255",
        "202",
        "166.000M",
        "否"
      },
      {
        "35",
        "低功率18",
        "255",
        "202",
        "168.000M",
        "否"
      },
      {
        "36",
        "低功率19",
        "255",
        "202",
        "170.000M",
        "否"
      },
      {
        "37",
        "低功率20",
        "255",
        "202",
        "172.000M",
        "否"
      },
      {
        "38",
        "低功率21",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "39",
        "中功率1",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "40",
        "中功率2",
        "255",
        "202",
        "136.000M",
        "否"
      },
      {
        "41",
        "中功率3",
        "255",
        "202",
        "138.000M",
        "否"
      },
      {
        "42",
        "中功率4",
        "255",
        "202",
        "140.000M",
        "否"
      },
      {
        "43",
        "中功率5",
        "255",
        "202",
        "142.000M",
        "否"
      },
      {
        "44",
        "中功率6",
        "255",
        "202",
        "144.000M",
        "否"
      },
      {
        "45",
        "中功率7",
        "255",
        "202",
        "146.000M",
        "否"
      },
      {
        "46",
        "中功率8",
        "255",
        "202",
        "148.000M",
        "否"
      },
      {
        "47",
        "中功率9",
        "255",
        "202",
        "150.000M",
        "否"
      },
      {
        "48",
        "中功率10",
        "255",
        "202",
        "152.000M",
        "否"
      },
      {
        "49",
        "中功率11",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "50",
        "中功率12",
        "255",
        "202",
        "156.000M",
        "否"
      },
      {
        "51",
        "中功率13",
        "255",
        "202",
        "158.000M",
        "否"
      },
      {
        "52",
        "中功率14",
        "255",
        "202",
        "160.000M",
        "否"
      },
      {
        "53",
        "中功率15",
        "255",
        "202",
        "162.000M",
        "否"
      },
      {
        "54",
        "中功率16",
        "255",
        "202",
        "164.000M",
        "否"
      },
      {
        "55",
        "中功率17",
        "255",
        "202",
        "166.000M",
        "否"
      },
      {
        "56",
        "中功率18",
        "255",
        "202",
        "168.000M",
        "否"
      },
      {
        "57",
        "中功率19",
        "255",
        "202",
        "170.000M",
        "否"
      },
      {
        "58",
        "中功率20",
        "255",
        "202",
        "172.000M",
        "否"
      },
      {
        "59",
        "中功率21",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "60",
        "高功率1",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "61",
        "高功率2",
        "255",
        "202",
        "136.000M",
        "否"
      },
      {
        "62",
        "高功率3",
        "255",
        "202",
        "138.000M",
        "否"
      },
      {
        "63",
        "高功率4",
        "255",
        "202",
        "140.000M",
        "否"
      },
      {
        "64",
        "高功率5",
        "255",
        "202",
        "142.000M",
        "否"
      },
      {
        "65",
        "高功率6",
        "255",
        "202",
        "144.000M",
        "否"
      },
      {
        "66",
        "高功率7",
        "255",
        "202",
        "146.000M",
        "否"
      },
      {
        "67",
        "高功率8",
        "255",
        "202",
        "148.000M",
        "否"
      },
      {
        "68",
        "高功率9",
        "255",
        "202",
        "150.000M",
        "否"
      },
      {
        "69",
        "高功率10",
        "255",
        "202",
        "152.000M",
        "否"
      },
      {
        "70",
        "高功率11",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "71",
        "高功率12",
        "255",
        "202",
        "156.000M",
        "否"
      },
      {
        "72",
        "高功率13",
        "255",
        "202",
        "158.000M",
        "否"
      },
      {
        "73",
        "高功率14",
        "255",
        "202",
        "160.000M",
        "否"
      },
      {
        "74",
        "高功率15",
        "255",
        "202",
        "162.000M",
        "否"
      },
      {
        "75",
        "高功率16",
        "255",
        "202",
        "164.000M",
        "否"
      },
      {
        "76",
        "高功率17",
        "255",
        "202",
        "166.000M",
        "否"
      },
      {
        "77",
        "高功率18",
        "255",
        "202",
        "168.000M",
        "否"
      },
      {
        "78",
        "高功率19",
        "255",
        "202",
        "170.000M",
        "否"
      },
      {
        "79",
        "高功率20",
        "255",
        "202",
        "172.000M",
        "否"
      },
      {
        "80",
        "高功率21",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "81",
        "发射频偏1",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "82",
        "发射频偏2",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "83",
        "发射频偏3",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "84",
        "数字023N",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "85",
        "数字023N",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "86",
        "数字023N",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "87",
        "CTC 62.5HZ",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "88",
        "CTC 62.5HZ",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "89",
        "CTC 62.5HZ",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "90",
        "CTC 91.5HZ",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "91",
        "CTC 91.5HZ",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "92",
        "CTC  91.5HZ",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "93",
        "CTC 151.4HZ",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "94",
        "CTC 151.4HZ",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "95",
        "CTC 151.4HZ",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "96",
        "CTC 192.8HZ",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "97",
        "CTC  192.8HZ",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "98",
        "CTC  192.8HZ",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "99",
        "CTC 254.1HZ",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "100",
        "CTC  254.1HZ",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "101",
        "CTC  254.1HZ",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "102",
        "DTMF 频偏1",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "103",
        "DTMF 频偏2",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "104",
        "DTMF 频偏3",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "105",
        "1750 频偏1",
        "255",
        "202",
        "134.000M",
        "否"
      },
      {
        "106",
        "1750 频偏2",
        "255",
        "202",
        "154.000M",
        "否"
      },
      {
        "107",
        "1750 频偏3",
        "255",
        "202",
        "174.000M",
        "否"
      },
      {
        "108",
        "窄带 静噪",
        "255",
        "202",
        "154.025M",
        "否"
      }
    };
    private int[] ConStrTable1Num = new int[17]
    {
      9,
      3,
      3,
      2,
      21,
      21,
      21,
      3,
      3,
      3,
      3,
      3,
      3,
      3,
      3,
      3,
      1
    };
    private string[,] ConStrTable22 = new string[149, 6]
    {
      {
        "1",
        "TUNE 1",
        "255",
        "202",
        "220.025M",
        "否"
      },
      {
        "2",
        "TUNE 2",
        "255",
        "202",
        "225.525M",
        "否"
      },
      {
        "3",
        "TUNE 3",
        "255",
        "202",
        "230.025M",
        "否"
      },
      {
        "4",
        "TUNE 4",
        "255",
        "202",
        "235.525M",
        "否"
      },
      {
        "5",
        "TUNE 5",
        "255",
        "202",
        "240.025M",
        "否"
      },
      {
        "6",
        "TUNE 6",
        "255",
        "202",
        "245.525M",
        "否"
      },
      {
        "7",
        "TUNE 7",
        "255",
        "202",
        "250.025M",
        "否"
      },
      {
        "8",
        "TUNE 8",
        "255",
        "202",
        "255.525M",
        "否"
      },
      {
        "9",
        "TUNE 9",
        "255",
        "202",
        "259.975M",
        "否"
      },
      {
        "1",
        "Sql_1 1",
        "255",
        "202",
        "200.025M",
        "否"
      },
      {
        "2",
        "Sql_1 2",
        "255",
        "202",
        "220.025M",
        "否"
      },
      {
        "3",
        "Sql_1 3",
        "255",
        "202",
        "240.025M",
        "否"
      },
      {
        "4",
        "Sql_1 4",
        "255",
        "202",
        "259.975M",
        "否"
      },
      {
        "5",
        "Sql_9 1",
        "255",
        "202",
        "200.025M",
        "否"
      },
      {
        "6",
        "Sql_9 2",
        "255",
        "202",
        "220.025M",
        "否"
      },
      {
        "7",
        "Sql_9 3",
        "255",
        "202",
        "240.025M",
        "否"
      },
      {
        "8",
        "Sql_9 4",
        "255",
        "202",
        "259.975M",
        "否"
      },
      {
        "9",
        "RSSI_1",
        "255",
        "202",
        "220.025M",
        "是"
      },
      {
        "10",
        "RSSI_FULL",
        "255",
        "202",
        "220.025M",
        "是"
      },
      {
        "11",
        "LOW 1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "12",
        "LOW 2",
        "255",
        "202",
        "202.000M",
        "否"
      },
      {
        "13",
        "LOW 3",
        "255",
        "202",
        "204.000M",
        "否"
      },
      {
        "14",
        "LOW 4",
        "255",
        "202",
        "206.000M",
        "否"
      },
      {
        "15",
        "LOW 5",
        "255",
        "202",
        "208.000M",
        "否"
      },
      {
        "16",
        "LOW 6",
        "255",
        "202",
        "210.000M",
        "否"
      },
      {
        "17",
        "LOW 7",
        "255",
        "202",
        "212.000M",
        "否"
      },
      {
        "18",
        "LOW 8",
        "255",
        "202",
        "214.000M",
        "否"
      },
      {
        "19",
        "LOW 9",
        "255",
        "202",
        "216.000M",
        "否"
      },
      {
        "20",
        "LOW 10",
        "255",
        "202",
        "218.000M",
        "否"
      },
      {
        "21",
        "LOW 11",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "22",
        "LOW 12",
        "255",
        "202",
        "222.000M",
        "否"
      },
      {
        "23",
        "LOW 13",
        "255",
        "202",
        "224.000M",
        "否"
      },
      {
        "24",
        "LOW 14",
        "255",
        "202",
        "226.000M",
        "否"
      },
      {
        "25",
        "LOW 15",
        "255",
        "202",
        "228.000M",
        "否"
      },
      {
        "26",
        "LOW 16",
        "255",
        "202",
        "230.000M",
        "否"
      },
      {
        "27",
        "LOW 17",
        "255",
        "202",
        "232.000M",
        "否"
      },
      {
        "28",
        "LOW 18",
        "255",
        "202",
        "234.000M",
        "否"
      },
      {
        "29",
        "LOW 19",
        "255",
        "202",
        "236.000M",
        "否"
      },
      {
        "30",
        "LOW 20",
        "255",
        "202",
        "238.000M",
        "否"
      },
      {
        "31",
        "LOW 21",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "32",
        "LOW 22",
        "255",
        "202",
        "242.000M",
        "否"
      },
      {
        "33",
        "LOW 23",
        "255",
        "202",
        "244.000M",
        "否"
      },
      {
        "34",
        "LOW 24",
        "255",
        "202",
        "246.000M",
        "否"
      },
      {
        "35",
        "LOW 25",
        "255",
        "202",
        "248.000M",
        "否"
      },
      {
        "36",
        "LOW 26",
        "255",
        "202",
        "250.000M",
        "否"
      },
      {
        "37",
        "LOW 27",
        "255",
        "202",
        "252.000M",
        "否"
      },
      {
        "38",
        "LOW 28",
        "255",
        "202",
        "254.000M",
        "否"
      },
      {
        "39",
        "LOW 29",
        "255",
        "202",
        "256.000M",
        "否"
      },
      {
        "40",
        "LOW 30",
        "255",
        "202",
        "258.000M",
        "否"
      },
      {
        "41",
        "LOW 31",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "42",
        "MID ",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "43",
        "MID ",
        "255",
        "202",
        "202.000M",
        "否"
      },
      {
        "44",
        "MID ",
        "255",
        "202",
        "204.000M",
        "否"
      },
      {
        "45",
        "MID ",
        "255",
        "202",
        "206.000M",
        "否"
      },
      {
        "46",
        "MID ",
        "255",
        "202",
        "208.000M",
        "否"
      },
      {
        "47",
        "MID ",
        "255",
        "202",
        "210.000M",
        "否"
      },
      {
        "48",
        "MID ",
        "255",
        "202",
        "212.000M",
        "否"
      },
      {
        "49",
        "MID ",
        "255",
        "202",
        "214.000M",
        "否"
      },
      {
        "50",
        "MID ",
        "255",
        "202",
        "216.000M",
        "否"
      },
      {
        "51",
        "MID 1",
        "255",
        "202",
        "218.000M",
        "否"
      },
      {
        "52",
        "MID 1",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "53",
        "MID 1",
        "255",
        "202",
        "222.000M",
        "否"
      },
      {
        "54",
        "MID 1",
        "255",
        "202",
        "224.000M",
        "否"
      },
      {
        "55",
        "MID 1",
        "255",
        "202",
        "226.000M",
        "否"
      },
      {
        "56",
        "MID 1",
        "255",
        "202",
        "228.000M",
        "否"
      },
      {
        "57",
        "MID 1",
        "255",
        "202",
        "230.000M",
        "否"
      },
      {
        "58",
        "MID 1",
        "255",
        "202",
        "232.000M",
        "否"
      },
      {
        "59",
        "MID 1",
        "255",
        "202",
        "234.000M",
        "否"
      },
      {
        "60",
        "MID 1",
        "255",
        "202",
        "236.000M",
        "否"
      },
      {
        "61",
        "MID 2",
        "255",
        "202",
        "238.000M",
        "否"
      },
      {
        "62",
        "MID 2",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "63",
        "MID 2",
        "255",
        "202",
        "242.000M",
        "否"
      },
      {
        "64",
        "MID 2",
        "255",
        "202",
        "244.000M",
        "否"
      },
      {
        "65",
        "MID 2",
        "255",
        "202",
        "246.000M",
        "否"
      },
      {
        "66",
        "MID 2",
        "255",
        "202",
        "248.000M",
        "否"
      },
      {
        "67",
        "MID 2",
        "255",
        "202",
        "250.000M",
        "否"
      },
      {
        "68",
        "MID 2",
        "255",
        "202",
        "252.000M",
        "否"
      },
      {
        "69",
        "MID 2",
        "255",
        "202",
        "254.000M",
        "否"
      },
      {
        "70",
        "MID 2",
        "255",
        "202",
        "256.000M",
        "否"
      },
      {
        "71",
        "MID 3",
        "255",
        "202",
        "258.000M",
        "否"
      },
      {
        "72",
        "MID 3",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "73",
        "HIG 1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "74",
        "HIG 2",
        "255",
        "202",
        "202.000M",
        "否"
      },
      {
        "75",
        "HIG 3",
        "255",
        "202",
        "204.000M",
        "否"
      },
      {
        "76",
        "HIG 4",
        "255",
        "202",
        "206.000M",
        "否"
      },
      {
        "77",
        "HIG 5",
        "255",
        "202",
        "208.000M",
        "否"
      },
      {
        "78",
        "HIG 6",
        "255",
        "202",
        "210.000M",
        "否"
      },
      {
        "79",
        "HIG 7",
        "255",
        "202",
        "212.000M",
        "否"
      },
      {
        "80",
        "HIG 8",
        "255",
        "202",
        "214.000M",
        "否"
      },
      {
        "81",
        "HIG 9",
        "255",
        "202",
        "216.000M",
        "否"
      },
      {
        "82",
        "HIG 10",
        "255",
        "202",
        "218.000M",
        "否"
      },
      {
        "83",
        "HIG 11",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "84",
        "HIG 12",
        "255",
        "202",
        "222.000M",
        "否"
      },
      {
        "85",
        "HIG 13",
        "255",
        "202",
        "224.000M",
        "否"
      },
      {
        "86",
        "HIG 14",
        "255",
        "202",
        "226.000M",
        "否"
      },
      {
        "87",
        "HIG 15",
        "255",
        "202",
        "228.000M",
        "否"
      },
      {
        "88",
        "HIG 16",
        "255",
        "202",
        "230.000M",
        "否"
      },
      {
        "89",
        "HIG 17",
        "255",
        "202",
        "232.000M",
        "否"
      },
      {
        "90",
        "HIG 18",
        "255",
        "202",
        "234.000M",
        "否"
      },
      {
        "91",
        "HIG 19",
        "255",
        "202",
        "236.000M",
        "否"
      },
      {
        "92",
        "HIG 20",
        "255",
        "202",
        "238.000M",
        "否"
      },
      {
        "93",
        "HIG 21",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "94",
        "HIG 22",
        "255",
        "202",
        "242.000M",
        "否"
      },
      {
        "95",
        "HIG 23",
        "255",
        "202",
        "244.000M",
        "否"
      },
      {
        "96",
        "HIG 24",
        "255",
        "202",
        "246.000M",
        "否"
      },
      {
        "97",
        "HIG 25",
        "255",
        "202",
        "248.000M",
        "否"
      },
      {
        "98",
        "HIG 26",
        "255",
        "202",
        "250.000M",
        "否"
      },
      {
        "99",
        "HIG 27",
        "255",
        "202",
        "252.000M",
        "否"
      },
      {
        "100",
        "HIG 28",
        "255",
        "202",
        "254.000M",
        "否"
      },
      {
        "101",
        "HIG 29",
        "255",
        "202",
        "256.000M",
        "否"
      },
      {
        "102",
        "HIG 30",
        "255",
        "202",
        "258.000M",
        "否"
      },
      {
        "103",
        "HIG 31",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "104",
        "DEV 1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "105",
        "DEV 2",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "106",
        "DEV 3",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "107",
        "DEV 4",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "108",
        "DCS 023N_1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "109",
        "DCS 023N_2",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "110",
        "DCS 023N_3",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "111",
        "DCS 023N_4",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "112",
        "CTC1 62.5HZ",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "113",
        "CTC2 62.5HZ",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "114",
        "CTC3 62.5HZ",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "115",
        "CTC4 62.5HZ",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "116",
        "CTC1 91.5HZ",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "117",
        "CTC2 91.5HZ",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "118",
        "CTC3 91.5HZ",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "119",
        "CTC4 91.5HZ",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "120",
        "CTC1 151.4HZ",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "121",
        "CTC2 151.4HZ",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "122",
        "CTC3 151.4HZ",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "123",
        "CTC4 151.4HZ",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "124",
        "CTC1 192.8HZ",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "125",
        "CTC2 192.8HZ",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "126",
        "CTC3 192.8HZ",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "127",
        "CTC4 192.8HZ",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "128",
        "CTC1 254.1HZ",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "129",
        "CTC2 254.1HZ",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "130",
        "CTC3 254.1HZ",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "131",
        "CTC4 254.1HZ",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "132",
        "DTMF DVE 1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "133",
        "DTMF DVE 2",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "134",
        "DTMF DVE 3",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "135",
        "DTMF DVE 4",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "136",
        "1750 DVE 1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "137",
        "1750 DVE 2",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "138",
        "1750 DVE 3",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "139",
        "1750 DVE 4",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "140",
        "NAR SQL",
        "255",
        "202",
        "154.025M",
        "否"
      }
    };
    private string[,] ConStrTable2 = new string[149, 6]
    {
      {
        "1",
        "接收灵敏度1",
        "255",
        "202",
        "220.025M",
        "否"
      },
      {
        "2",
        "接收灵敏度2",
        "255",
        "202",
        "225.525M",
        "否"
      },
      {
        "3",
        "接收灵敏度3",
        "255",
        "202",
        "230.025M",
        "否"
      },
      {
        "4",
        "接收灵敏度4",
        "255",
        "202",
        "235.525M",
        "否"
      },
      {
        "5",
        "接收灵敏度5",
        "255",
        "202",
        "240.025M",
        "否"
      },
      {
        "6",
        "接收灵敏度6",
        "255",
        "202",
        "245.525M",
        "否"
      },
      {
        "7",
        "接收灵敏度7",
        "255",
        "202",
        "250.025M",
        "否"
      },
      {
        "8",
        "接收灵敏度8",
        "255",
        "202",
        "255.525M",
        "否"
      },
      {
        "9",
        "接收灵敏度9",
        "255",
        "202",
        "259.975M",
        "否"
      },
      {
        "10",
        "1级静噪1",
        "255",
        "202",
        "200.025M",
        "否"
      },
      {
        "11",
        "1级静噪2",
        "255",
        "202",
        "220.025M",
        "否"
      },
      {
        "12",
        "1级静噪3",
        "255",
        "202",
        "240.025M",
        "否"
      },
      {
        "13",
        "1级静噪4",
        "255",
        "202",
        "259.975M",
        "否"
      },
      {
        "14",
        "9级静噪1",
        "255",
        "202",
        "200.025M",
        "否"
      },
      {
        "15",
        "9级静噪2",
        "255",
        "202",
        "220.025M",
        "否"
      },
      {
        "16",
        "9级静噪3",
        "255",
        "202",
        "240.025M",
        "否"
      },
      {
        "17",
        "9级静噪4",
        "255",
        "202",
        "259.975M",
        "否"
      },
      {
        "18",
        "1格场强指示",
        "255",
        "202",
        "220.025M",
        "是"
      },
      {
        "19",
        "满格场强指示",
        "255",
        "202",
        "220.025M",
        "是"
      },
      {
        "20",
        "低功率1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "21",
        "低功率2",
        "255",
        "202",
        "202.000M",
        "否"
      },
      {
        "22",
        "低功率3",
        "255",
        "202",
        "204.000M",
        "否"
      },
      {
        "23",
        "低功率4",
        "255",
        "202",
        "206.000M",
        "否"
      },
      {
        "24",
        "低功率5",
        "255",
        "202",
        "208.000M",
        "否"
      },
      {
        "25",
        "低功率6",
        "255",
        "202",
        "210.000M",
        "否"
      },
      {
        "26",
        "低功率7",
        "255",
        "202",
        "212.000M",
        "否"
      },
      {
        "27",
        "低功率8",
        "255",
        "202",
        "214.000M",
        "否"
      },
      {
        "28",
        "低功率9",
        "255",
        "202",
        "216.000M",
        "否"
      },
      {
        "29",
        "低功率10",
        "255",
        "202",
        "218.000M",
        "否"
      },
      {
        "30",
        "低功率11",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "31",
        "低功率12",
        "255",
        "202",
        "222.000M",
        "否"
      },
      {
        "32",
        "低功率13",
        "255",
        "202",
        "224.000M",
        "否"
      },
      {
        "33",
        "低功率14",
        "255",
        "202",
        "226.000M",
        "否"
      },
      {
        "34",
        "低功率15",
        "255",
        "202",
        "228.000M",
        "否"
      },
      {
        "35",
        "低功率16",
        "255",
        "202",
        "230.000M",
        "否"
      },
      {
        "36",
        "低功率17",
        "255",
        "202",
        "232.000M",
        "否"
      },
      {
        "37",
        "低功率18",
        "255",
        "202",
        "234.000M",
        "否"
      },
      {
        "38",
        "低功率19",
        "255",
        "202",
        "236.000M",
        "否"
      },
      {
        "39",
        "低功率20",
        "255",
        "202",
        "238.000M",
        "否"
      },
      {
        "40",
        "低功率21",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "41",
        "低功率22",
        "255",
        "202",
        "242.000M",
        "否"
      },
      {
        "42",
        "低功率23",
        "255",
        "202",
        "244.000M",
        "否"
      },
      {
        "43",
        "低功率24",
        "255",
        "202",
        "246.000M",
        "否"
      },
      {
        "44",
        "低功率25",
        "255",
        "202",
        "248.000M",
        "否"
      },
      {
        "45",
        "低功率26",
        "255",
        "202",
        "250.000M",
        "否"
      },
      {
        "46",
        "低功率27",
        "255",
        "202",
        "252.000M",
        "否"
      },
      {
        "47",
        "低功率28",
        "255",
        "202",
        "254.000M",
        "否"
      },
      {
        "48",
        "低功率29",
        "255",
        "202",
        "256.000M",
        "否"
      },
      {
        "49",
        "低功率30",
        "255",
        "202",
        "258.000M",
        "否"
      },
      {
        "50",
        "低功率31",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "51",
        "中功率1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "52",
        "中功率2",
        "255",
        "202",
        "202.000M",
        "否"
      },
      {
        "53",
        "中功率3",
        "255",
        "202",
        "204.000M",
        "否"
      },
      {
        "54",
        "中功率4",
        "255",
        "202",
        "206.000M",
        "否"
      },
      {
        "55",
        "中功率5",
        "255",
        "202",
        "208.000M",
        "否"
      },
      {
        "56",
        "中功率6",
        "255",
        "202",
        "210.000M",
        "否"
      },
      {
        "57",
        "中功率7",
        "255",
        "202",
        "212.000M",
        "否"
      },
      {
        "58",
        "中功率8",
        "255",
        "202",
        "214.000M",
        "否"
      },
      {
        "59",
        "中功率9",
        "255",
        "202",
        "216.000M",
        "否"
      },
      {
        "60",
        "中功率10",
        "255",
        "202",
        "218.000M",
        "否"
      },
      {
        "61",
        "中功率11",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "62",
        "中功率12",
        "255",
        "202",
        "222.000M",
        "否"
      },
      {
        "63",
        "中功率13",
        "255",
        "202",
        "224.000M",
        "否"
      },
      {
        "64",
        "中功率14",
        "255",
        "202",
        "226.000M",
        "否"
      },
      {
        "65",
        "中功率15",
        "255",
        "202",
        "228.000M",
        "否"
      },
      {
        "66",
        "中功率16",
        "255",
        "202",
        "230.000M",
        "否"
      },
      {
        "67",
        "中功率17",
        "255",
        "202",
        "232.000M",
        "否"
      },
      {
        "68",
        "中功率18",
        "255",
        "202",
        "234.000M",
        "否"
      },
      {
        "69",
        "中功率19",
        "255",
        "202",
        "236.000M",
        "否"
      },
      {
        "70",
        "中功率20",
        "255",
        "202",
        "238.000M",
        "否"
      },
      {
        "71",
        "中功率21",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "72",
        "中功率22",
        "255",
        "202",
        "242.000M",
        "否"
      },
      {
        "73",
        "中功率23",
        "255",
        "202",
        "244.000M",
        "否"
      },
      {
        "74",
        "中功率24",
        "255",
        "202",
        "246.000M",
        "否"
      },
      {
        "75",
        "中功率25",
        "255",
        "202",
        "248.000M",
        "否"
      },
      {
        "76",
        "中功率26",
        "255",
        "202",
        "250.000M",
        "否"
      },
      {
        "77",
        "中功率27",
        "255",
        "202",
        "252.000M",
        "否"
      },
      {
        "78",
        "中功率28",
        "255",
        "202",
        "254.000M",
        "否"
      },
      {
        "79",
        "中功率29",
        "255",
        "202",
        "256.000M",
        "否"
      },
      {
        "80",
        "中功率30",
        "255",
        "202",
        "258.000M",
        "否"
      },
      {
        "81",
        "中功率31",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "82",
        "高功率1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "83",
        "高功率2",
        "255",
        "202",
        "202.000M",
        "否"
      },
      {
        "84",
        "高功率3",
        "255",
        "202",
        "204.000M",
        "否"
      },
      {
        "85",
        "高功率4",
        "255",
        "202",
        "206.000M",
        "否"
      },
      {
        "86",
        "高功率5",
        "255",
        "202",
        "208.000M",
        "否"
      },
      {
        "87",
        "高功率6",
        "255",
        "202",
        "210.000M",
        "否"
      },
      {
        "88",
        "高功率7",
        "255",
        "202",
        "212.000M",
        "否"
      },
      {
        "89",
        "高功率8",
        "255",
        "202",
        "214.000M",
        "否"
      },
      {
        "90",
        "高功率9",
        "255",
        "202",
        "216.000M",
        "否"
      },
      {
        "91",
        "高功率10",
        "255",
        "202",
        "218.000M",
        "否"
      },
      {
        "92",
        "高功率11",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "93",
        "高功率12",
        "255",
        "202",
        "222.000M",
        "否"
      },
      {
        "94",
        "高功率13",
        "255",
        "202",
        "224.000M",
        "否"
      },
      {
        "95",
        "高功率14",
        "255",
        "202",
        "226.000M",
        "否"
      },
      {
        "96",
        "高功率15",
        "255",
        "202",
        "228.000M",
        "否"
      },
      {
        "97",
        "高功率16",
        "255",
        "202",
        "230.000M",
        "否"
      },
      {
        "98",
        "高功率17",
        "255",
        "202",
        "232.000M",
        "否"
      },
      {
        "99",
        "高功率18",
        "255",
        "202",
        "234.000M",
        "否"
      },
      {
        "100",
        "高功率19",
        "255",
        "202",
        "236.000M",
        "否"
      },
      {
        "101",
        "高功率20",
        "255",
        "202",
        "238.000M",
        "否"
      },
      {
        "102",
        "高功率21",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "103",
        "高功率22",
        "255",
        "202",
        "242.000M",
        "否"
      },
      {
        "104",
        "高功率23",
        "255",
        "202",
        "244.000M",
        "否"
      },
      {
        "105",
        "高功率24",
        "255",
        "202",
        "246.000M",
        "否"
      },
      {
        "106",
        "高功率25",
        "255",
        "202",
        "248.000M",
        "否"
      },
      {
        "107",
        "高功率26",
        "255",
        "202",
        "250.000M",
        "否"
      },
      {
        "108",
        "高功率27",
        "255",
        "202",
        "252.000M",
        "否"
      },
      {
        "109",
        "高功率28",
        "255",
        "202",
        "254.000M",
        "否"
      },
      {
        "110",
        "高功率29",
        "255",
        "202",
        "256.000M",
        "否"
      },
      {
        "111",
        "高功率30",
        "255",
        "202",
        "258.000M",
        "否"
      },
      {
        "112",
        "高功率31",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "113",
        "发射频偏1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "114",
        "发射频偏2",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "115",
        "发射频偏3",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "116",
        "发射频偏4",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "117",
        "数字023N_1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "118",
        "数字023N_2",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "119",
        "数字023N_3",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "120",
        "数字023N_4",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "121",
        "CTC1 62.5HZ",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "122",
        "CTC2 62.5HZ",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "123",
        "CTC3 62.5HZ",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "124",
        "CTC4 62.5HZ",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "125",
        "CTC1 91.5HZ",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "126",
        "CTC2 91.5HZ",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "127",
        "CTC3 91.5HZ",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "128",
        "CTC4 91.5HZ",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "129",
        "CTC1 151.4HZ",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "130",
        "CTC2 151.4HZ",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "131",
        "CTC3 151.4HZ",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "132",
        "CTC4 151.4HZ",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "133",
        "CTC1 192.8HZ",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "134",
        "CTC2 192.8HZ",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "135",
        "CTC3 192.8HZ",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "136",
        "CTC4 192.8HZ",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "137",
        "CTC1 254.1HZ",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "138",
        "CTC2 254.1HZ",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "139",
        "CTC3 254.1HZ",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "140",
        "CTC4 254.1HZ",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "141",
        "DTMF 频偏1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "142",
        "DTMF 频偏2",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "143",
        "DTMF 频偏3",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "144",
        "DTMF 频偏4",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "145",
        "1750 频偏1",
        "255",
        "202",
        "200.000M",
        "否"
      },
      {
        "146",
        "1750 频偏2",
        "255",
        "202",
        "220.000M",
        "否"
      },
      {
        "147",
        "1750 频偏3",
        "255",
        "202",
        "240.000M",
        "否"
      },
      {
        "148",
        "1750 频偏4",
        "255",
        "202",
        "260.000M",
        "否"
      },
      {
        "149",
        "窄带 静噪",
        "255",
        "202",
        "154.025M",
        "否"
      }
    };
    private int[] ConStrTable2Num = new int[16]
    {
      9,
      4,
      4,
      2,
      31,
      31,
      31,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      4,
      1
    };
    private string[,] ConStrTable33 = new string[276, 6]
    {
      {
        "1",
        "TUNE 1",
        "255",
        "202",
        "400.025M",
        "否"
      },
      {
        "2",
        "TUNE 2",
        "255",
        "202",
        "410.025M",
        "否"
      },
      {
        "3",
        "TUNE 3",
        "255",
        "202",
        "420.025M",
        "否"
      },
      {
        "4",
        "TUNE 4",
        "255",
        "202",
        "430.025M",
        "否"
      },
      {
        "5",
        "TUNE 5",
        "255",
        "202",
        "440.025M",
        "否"
      },
      {
        "6",
        "TUNE 6",
        "255",
        "202",
        "450.025M",
        "否"
      },
      {
        "7",
        "TUNE 7",
        "255",
        "202",
        "460.025M",
        "否"
      },
      {
        "8",
        "TUNE 8",
        "255",
        "202",
        "470.025M",
        "否"
      },
      {
        "9",
        "TUNE 9",
        "255",
        "202",
        "480.025M",
        "否"
      },
      {
        "10",
        "TUNE 10",
        "255",
        "202",
        "490.025M",
        "否"
      },
      {
        "11",
        "TUNE 11",
        "255",
        "202",
        "500.975M",
        "否"
      },
      {
        "12",
        "TUNE 12",
        "255",
        "202",
        "510.025M",
        "否"
      },
      {
        "13",
        "TUNE 13",
        "255",
        "202",
        "519.975M",
        "否"
      },
      {
        "14",
        "Sql_1 1",
        "255",
        "202",
        "400.025M",
        "否"
      },
      {
        "15",
        "Sql_1 2",
        "255",
        "202",
        "420.025M",
        "否"
      },
      {
        "16",
        "Sql_1 3",
        "255",
        "202",
        "440.025M",
        "否"
      },
      {
        "17",
        "Sql_1 4",
        "255",
        "202",
        "460.025M",
        "否"
      },
      {
        "18",
        "Sql_1 5",
        "255",
        "202",
        "480.025M",
        "否"
      },
      {
        "19",
        "Sql_1 6",
        "255",
        "202",
        "500.025M",
        "否"
      },
      {
        "20",
        "Sql_1 7",
        "255",
        "202",
        "519.975M",
        "否"
      },
      {
        "21",
        "Sql_9 1",
        "255",
        "202",
        "400.025M",
        "否"
      },
      {
        "22",
        "Sql_9 2",
        "255",
        "202",
        "420.025M",
        "否"
      },
      {
        "23",
        "Sql_9 3",
        "255",
        "202",
        "440.025M",
        "否"
      },
      {
        "24",
        "Sql_9 4",
        "255",
        "202",
        "460.025M",
        "否"
      },
      {
        "25",
        "Sql_9 5",
        "255",
        "202",
        "480.025M",
        "否"
      },
      {
        "26",
        "Sql_9 6",
        "255",
        "202",
        "500.025M",
        "否"
      },
      {
        "27",
        "Sql_9 7",
        "255",
        "202",
        "519.975M",
        "否"
      },
      {
        "28",
        "RSSI_1",
        "255",
        "202",
        "420.025M",
        "是"
      },
      {
        "29",
        "RSSI_FULL",
        "255",
        "202",
        "420.025M",
        "是"
      },
      {
        "30",
        "LOW 1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "31",
        "LOW 2",
        "255",
        "202",
        "402.000M",
        "否"
      },
      {
        "32",
        "LOW 3",
        "255",
        "202",
        "404.000M",
        "否"
      },
      {
        "33",
        "LOW 4",
        "255",
        "202",
        "406.000M",
        "否"
      },
      {
        "34",
        "LOW 5",
        "255",
        "202",
        "408.000M",
        "否"
      },
      {
        "35",
        "LOW 6",
        "255",
        "202",
        "410.000M",
        "否"
      },
      {
        "36",
        "LOW 7",
        "255",
        "202",
        "412.000M",
        "否"
      },
      {
        "37",
        "LOW 8",
        "255",
        "202",
        "414.000M",
        "否"
      },
      {
        "38",
        "LOW 9",
        "255",
        "202",
        "416.000M",
        "否"
      },
      {
        "39",
        "LOW 10",
        "255",
        "202",
        "418.000M",
        "否"
      },
      {
        "40",
        "LOW 11",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "41",
        "LOW 12",
        "255",
        "202",
        "422.000M",
        "否"
      },
      {
        "42",
        "LOW 13",
        "255",
        "202",
        "424.000M",
        "否"
      },
      {
        "43",
        "LOW 14",
        "255",
        "202",
        "426.000M",
        "否"
      },
      {
        "44",
        "LOW 15",
        "255",
        "202",
        "428.000M",
        "否"
      },
      {
        "45",
        "LOW 16",
        "255",
        "202",
        "430.000M",
        "否"
      },
      {
        "46",
        "LOW 17",
        "255",
        "202",
        "432.000M",
        "否"
      },
      {
        "47",
        "LOW 18",
        "255",
        "202",
        "434.000M",
        "否"
      },
      {
        "48",
        "LOW 19",
        "255",
        "202",
        "436.000M",
        "否"
      },
      {
        "49",
        "LOW 20",
        "255",
        "202",
        "438.000M",
        "否"
      },
      {
        "50",
        "LOW 21",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "51",
        "LOW 22",
        "255",
        "202",
        "442.000M",
        "否"
      },
      {
        "52",
        "LOW 23",
        "255",
        "202",
        "444.000M",
        "否"
      },
      {
        "53",
        "LOW 24",
        "255",
        "202",
        "446.000M",
        "否"
      },
      {
        "54",
        "LOW 25",
        "255",
        "202",
        "448.000M",
        "否"
      },
      {
        "55",
        "LOW 26",
        "255",
        "202",
        "450.000M",
        "否"
      },
      {
        "56",
        "LOW 27",
        "255",
        "202",
        "452.000M",
        "否"
      },
      {
        "57",
        "LOW 28",
        "255",
        "202",
        "454.000M",
        "否"
      },
      {
        "58",
        "LOW 29",
        "255",
        "202",
        "456.000M",
        "否"
      },
      {
        "59",
        "LOW 30",
        "255",
        "202",
        "458.000M",
        "否"
      },
      {
        "60",
        "LOW 31",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "61",
        "LOW 32",
        "255",
        "202",
        "462.000M",
        "否"
      },
      {
        "62",
        "LOW 33",
        "255",
        "202",
        "464.000M",
        "否"
      },
      {
        "63",
        "LOW 34",
        "255",
        "202",
        "466.000M",
        "否"
      },
      {
        "64",
        "LOW 35",
        "255",
        "202",
        "468.000M",
        "否"
      },
      {
        "65",
        "LOW 36",
        "255",
        "202",
        "470.000M",
        "否"
      },
      {
        "66",
        "LOW 37",
        "255",
        "202",
        "472.000M",
        "否"
      },
      {
        "67",
        "LOW 38",
        "255",
        "202",
        "474.000M",
        "否"
      },
      {
        "68",
        "LOW 39",
        "255",
        "202",
        "476.000M",
        "否"
      },
      {
        "69",
        "LOW 40",
        "255",
        "202",
        "478.000M",
        "否"
      },
      {
        "70",
        "LOW 41",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "71",
        "LOW 42",
        "255",
        "202",
        "482.000M",
        "否"
      },
      {
        "72",
        "LOW 43",
        "255",
        "202",
        "484.000M",
        "否"
      },
      {
        "73",
        "LOW 44",
        "255",
        "202",
        "486.000M",
        "否"
      },
      {
        "74",
        "LOW 45",
        "255",
        "202",
        "488.000M",
        "否"
      },
      {
        "75",
        "LOW 46",
        "255",
        "202",
        "490.000M",
        "否"
      },
      {
        "76",
        "LOW 47",
        "255",
        "202",
        "492.000M",
        "否"
      },
      {
        "77",
        "LOW 48",
        "255",
        "202",
        "494.000M",
        "否"
      },
      {
        "78",
        "LOW 49",
        "255",
        "202",
        "496.000M",
        "否"
      },
      {
        "79",
        "LOW 50",
        "255",
        "202",
        "498.000M",
        "否"
      },
      {
        "80",
        "LOW 51",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "81",
        "LOW 52",
        "255",
        "202",
        "502.000M",
        "否"
      },
      {
        "82",
        "LOW 53",
        "255",
        "202",
        "504.000M",
        "否"
      },
      {
        "83",
        "LOW 54",
        "255",
        "202",
        "506.000M",
        "否"
      },
      {
        "84",
        "LOW 55",
        "255",
        "202",
        "508.000M",
        "否"
      },
      {
        "85",
        "LOW 56",
        "255",
        "202",
        "510.000M",
        "否"
      },
      {
        "86",
        "LOW 57",
        "255",
        "202",
        "512.000M",
        "否"
      },
      {
        "87",
        "LOW 58",
        "255",
        "202",
        "514.000M",
        "否"
      },
      {
        "88",
        "LOW 59",
        "255",
        "202",
        "516.000M",
        "否"
      },
      {
        "89",
        "LOW 60",
        "255",
        "202",
        "518.000M",
        "否"
      },
      {
        "90",
        "LOW 61",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "91",
        "MID 1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "92",
        "MID 2",
        "255",
        "202",
        "402.000M",
        "否"
      },
      {
        "93",
        "MID 3",
        "255",
        "202",
        "404.000M",
        "否"
      },
      {
        "94",
        "MID 4",
        "255",
        "202",
        "406.000M",
        "否"
      },
      {
        "95",
        "MID 5",
        "255",
        "202",
        "408.000M",
        "否"
      },
      {
        "96",
        "MID 6",
        "255",
        "202",
        "410.000M",
        "否"
      },
      {
        "97",
        "MID 7",
        "255",
        "202",
        "412.000M",
        "否"
      },
      {
        "98",
        "MID 8",
        "255",
        "202",
        "414.000M",
        "否"
      },
      {
        "99",
        "MID 9",
        "255",
        "202",
        "416.000M",
        "否"
      },
      {
        "100",
        "MID 10",
        "255",
        "202",
        "418.000M",
        "否"
      },
      {
        "101",
        "MID 11",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "102",
        "MID 12",
        "255",
        "202",
        "422.000M",
        "否"
      },
      {
        "103",
        "MID 13",
        "255",
        "202",
        "424.000M",
        "否"
      },
      {
        "104",
        "MID 14",
        "255",
        "202",
        "426.000M",
        "否"
      },
      {
        "105",
        "MID 15",
        "255",
        "202",
        "428.000M",
        "否"
      },
      {
        "106",
        "MID 16",
        "255",
        "202",
        "430.000M",
        "否"
      },
      {
        "107",
        "MID 17",
        "255",
        "202",
        "432.000M",
        "否"
      },
      {
        "108",
        "MID 18",
        "255",
        "202",
        "434.000M",
        "否"
      },
      {
        "109",
        "MID 19",
        "255",
        "202",
        "436.000M",
        "否"
      },
      {
        "110",
        "MID 20",
        "255",
        "202",
        "438.000M",
        "否"
      },
      {
        "111",
        "MID 21",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "112",
        "MID 22",
        "255",
        "202",
        "442.000M",
        "否"
      },
      {
        "113",
        "MID 23",
        "255",
        "202",
        "444.000M",
        "否"
      },
      {
        "114",
        "MID 24",
        "255",
        "202",
        "446.000M",
        "否"
      },
      {
        "115",
        "MID 25",
        "255",
        "202",
        "448.000M",
        "否"
      },
      {
        "116",
        "MID 26",
        "255",
        "202",
        "450.000M",
        "否"
      },
      {
        "117",
        "MID 27",
        "255",
        "202",
        "452.000M",
        "否"
      },
      {
        "118",
        "MID 28",
        "255",
        "202",
        "454.000M",
        "否"
      },
      {
        "119",
        "MID 29",
        "255",
        "202",
        "456.000M",
        "否"
      },
      {
        "120",
        "MID 30",
        "255",
        "202",
        "458.000M",
        "否"
      },
      {
        "121",
        "MID 31",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "122",
        "MID 32",
        "255",
        "202",
        "462.000M",
        "否"
      },
      {
        "123",
        "MID 33",
        "255",
        "202",
        "464.000M",
        "否"
      },
      {
        "124",
        "MID 34",
        "255",
        "202",
        "466.000M",
        "否"
      },
      {
        "125",
        "MID 35",
        "255",
        "202",
        "468.000M",
        "否"
      },
      {
        "126",
        "MID 36",
        "255",
        "202",
        "470.000M",
        "否"
      },
      {
        "127",
        "MID 37",
        "255",
        "202",
        "472.000M",
        "否"
      },
      {
        "128",
        "MID 38",
        "255",
        "202",
        "474.000M",
        "否"
      },
      {
        "129",
        "MID 39",
        "255",
        "202",
        "476.000M",
        "否"
      },
      {
        "130",
        "MID 40",
        "255",
        "202",
        "478.000M",
        "否"
      },
      {
        "131",
        "MID 41",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "132",
        "MID 42",
        "255",
        "202",
        "482.000M",
        "否"
      },
      {
        "133",
        "MID 43",
        "255",
        "202",
        "484.000M",
        "否"
      },
      {
        "134",
        "MID 44",
        "255",
        "202",
        "486.000M",
        "否"
      },
      {
        "135",
        "MID 45",
        "255",
        "202",
        "488.000M",
        "否"
      },
      {
        "136",
        "MID 46",
        "255",
        "202",
        "490.000M",
        "否"
      },
      {
        "137",
        "MID 47",
        "255",
        "202",
        "492.000M",
        "否"
      },
      {
        "138",
        "MID 48",
        "255",
        "202",
        "494.000M",
        "否"
      },
      {
        "139",
        "MID 49",
        "255",
        "202",
        "496.000M",
        "否"
      },
      {
        "140",
        "MID 50",
        "255",
        "202",
        "498.000M",
        "否"
      },
      {
        "141",
        "MID 51",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "142",
        "MID 52",
        "255",
        "202",
        "502.000M",
        "否"
      },
      {
        "143",
        "MID 53",
        "255",
        "202",
        "504.000M",
        "否"
      },
      {
        "144",
        "MID 54",
        "255",
        "202",
        "506.000M",
        "否"
      },
      {
        "145",
        "MID 55",
        "255",
        "202",
        "508.000M",
        "否"
      },
      {
        "146",
        "MID 56",
        "255",
        "202",
        "510.000M",
        "否"
      },
      {
        "147",
        "MID 57",
        "255",
        "202",
        "512.000M",
        "否"
      },
      {
        "148",
        "MID 58",
        "255",
        "202",
        "514.000M",
        "否"
      },
      {
        "149",
        "MID 59",
        "255",
        "202",
        "516.000M",
        "否"
      },
      {
        "150",
        "MID 60",
        "255",
        "202",
        "518.000M",
        "否"
      },
      {
        "151",
        "MID 61",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "152",
        "HIG 1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "153",
        "HIG 2",
        "255",
        "202",
        "402.000M",
        "否"
      },
      {
        "154",
        "HIG 3",
        "255",
        "202",
        "404.000M",
        "否"
      },
      {
        "155",
        "HIG 4",
        "255",
        "202",
        "406.000M",
        "否"
      },
      {
        "156",
        "HIG 5",
        "255",
        "202",
        "408.000M",
        "否"
      },
      {
        "157",
        "HIG 6",
        "255",
        "202",
        "410.000M",
        "否"
      },
      {
        "158",
        "HIG 7",
        "255",
        "202",
        "412.000M",
        "否"
      },
      {
        "159",
        "HIG 8",
        "255",
        "202",
        "414.000M",
        "否"
      },
      {
        "160",
        "HIG 9",
        "255",
        "202",
        "416.000M",
        "否"
      },
      {
        "161",
        "HIG 10",
        "255",
        "202",
        "418.000M",
        "否"
      },
      {
        "162",
        "HIG 11",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "163",
        "HIG 12",
        "255",
        "202",
        "422.000M",
        "否"
      },
      {
        "164",
        "HIG 13",
        "255",
        "202",
        "424.000M",
        "否"
      },
      {
        "165",
        "HIG 14",
        "255",
        "202",
        "426.000M",
        "否"
      },
      {
        "166",
        "HIG 15",
        "255",
        "202",
        "428.000M",
        "否"
      },
      {
        "167",
        "HIG 16",
        "255",
        "202",
        "430.000M",
        "否"
      },
      {
        "168",
        "HIG 17",
        "255",
        "202",
        "432.000M",
        "否"
      },
      {
        "169",
        "HIG 18",
        "255",
        "202",
        "434.000M",
        "否"
      },
      {
        "170",
        "HIG 19",
        "255",
        "202",
        "436.000M",
        "否"
      },
      {
        "171",
        "HIG 20",
        "255",
        "202",
        "438.000M",
        "否"
      },
      {
        "172",
        "HIG 21",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "173",
        "HIG 22",
        "255",
        "202",
        "442.000M",
        "否"
      },
      {
        "174",
        "HIG 23",
        "255",
        "202",
        "444.000M",
        "否"
      },
      {
        "175",
        "HIG 24",
        "255",
        "202",
        "446.000M",
        "否"
      },
      {
        "176",
        "HIG 25",
        "255",
        "202",
        "448.000M",
        "否"
      },
      {
        "177",
        "HIG 26",
        "255",
        "202",
        "450.000M",
        "否"
      },
      {
        "178",
        "HIG 27",
        "255",
        "202",
        "452.000M",
        "否"
      },
      {
        "179",
        "HIG 28",
        "255",
        "202",
        "454.000M",
        "否"
      },
      {
        "180",
        "HIG 29",
        "255",
        "202",
        "456.000M",
        "否"
      },
      {
        "181",
        "HIG 30",
        "255",
        "202",
        "458.000M",
        "否"
      },
      {
        "182",
        "HIG 31",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "183",
        "HIG 32",
        "255",
        "202",
        "462.000M",
        "否"
      },
      {
        "184",
        "HIG 33",
        "255",
        "202",
        "464.000M",
        "否"
      },
      {
        "185",
        "HIG 34",
        "255",
        "202",
        "466.000M",
        "否"
      },
      {
        "186",
        "HIG 35",
        "255",
        "202",
        "468.000M",
        "否"
      },
      {
        "187",
        "HIG 36",
        "255",
        "202",
        "470.000M",
        "否"
      },
      {
        "188",
        "HIG 37",
        "255",
        "202",
        "472.000M",
        "否"
      },
      {
        "189",
        "HIG 38",
        "255",
        "202",
        "474.000M",
        "否"
      },
      {
        "190",
        "HIG 39",
        "255",
        "202",
        "476.000M",
        "否"
      },
      {
        "191",
        "HIG 40",
        "255",
        "202",
        "478.000M",
        "否"
      },
      {
        "192",
        "HIG 41",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "193",
        "HIG 42",
        "255",
        "202",
        "482.000M",
        "否"
      },
      {
        "194",
        "HIG 43",
        "255",
        "202",
        "484.000M",
        "否"
      },
      {
        "195",
        "HIG 44",
        "255",
        "202",
        "486.000M",
        "否"
      },
      {
        "196",
        "HIG 45",
        "255",
        "202",
        "488.000M",
        "否"
      },
      {
        "197",
        "HIG 46",
        "255",
        "202",
        "490.000M",
        "否"
      },
      {
        "198",
        "HIG 47",
        "255",
        "202",
        "492.000M",
        "否"
      },
      {
        "199",
        "HIG 48",
        "255",
        "202",
        "494.000M",
        "否"
      },
      {
        "200",
        "HIG 49",
        "255",
        "202",
        "496.000M",
        "否"
      },
      {
        "201",
        "HIG 50",
        "255",
        "202",
        "498.000M",
        "否"
      },
      {
        "202",
        "HIG 51",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "203",
        "HIG 52",
        "255",
        "202",
        "502.000M",
        "否"
      },
      {
        "204",
        "HIG 53",
        "255",
        "202",
        "504.000M",
        "否"
      },
      {
        "205",
        "HIG 54",
        "255",
        "202",
        "506.000M",
        "否"
      },
      {
        "206",
        "HIG 55",
        "255",
        "202",
        "508.000M",
        "否"
      },
      {
        "207",
        "HIG 56",
        "255",
        "202",
        "510.000M",
        "否"
      },
      {
        "208",
        "HIG 57",
        "255",
        "202",
        "512.000M",
        "否"
      },
      {
        "209",
        "HIG 58",
        "255",
        "202",
        "514.000M",
        "否"
      },
      {
        "210",
        "HIG 59",
        "255",
        "202",
        "516.000M",
        "否"
      },
      {
        "211",
        "HIG 60",
        "255",
        "202",
        "518.000M",
        "否"
      },
      {
        "212",
        "HIG 61",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "213",
        "DEV 1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "214",
        "DEV 2",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "215",
        "DEV 3",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "216",
        "DEV 4",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "217",
        "DEV 5",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "218",
        "DEV 6",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "219",
        "DEV 7",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "220",
        "DCS 023N_1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "221",
        "DCS 023N_2",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "222",
        "DCS 023N_3",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "223",
        "DCS 023N_4",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "224",
        "DCS 023N_5",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "225",
        "DCS 023N_6",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "226",
        "DCS 023N_7",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "227",
        "CTC1 62.5HZ",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "228",
        "CTC1 62.5HZ",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "229",
        "CTC1 62.5HZ",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "230",
        "CTC1 62.5HZ",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "231",
        "CTC1 62.5HZ",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "232",
        "CTC1 62.5HZ",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "233",
        "CTC1 62.5HZ",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "234",
        "CTC1 91.5HZ",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "235",
        "CTC1 91.5HZ",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "236",
        "CTC1 91.5HZ",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "237",
        "CTC1 91.5HZ",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "238",
        "CTC1 91.5HZ",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "239",
        "CTC1 91.5HZ",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "240",
        "CTC1 91.5HZ",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "241",
        "CTC1 151.4HZ",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "242",
        "CTC1 151.4HZ",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "243",
        "CTC1 151.4HZ",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "244",
        "CTC1 151.4HZ",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "245",
        "CTC1 151.4HZ",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "246",
        "CTC1 151.4HZ",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "247",
        "CTC1 151.4HZ",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "248",
        "CTC1 192.8HZ",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "249",
        "CTC1 192.8HZ",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "250",
        "CTC1 192.8HZ",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "251",
        "CTC1 192.8HZ",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "252",
        "CTC1 192.8HZ",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "253",
        "CTC1 192.8HZ",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "254",
        "CTC1 192.8HZ",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "255",
        "CTC1 254.1HZ",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "256",
        "CTC1 254.1HZ",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "257",
        "CTC1 254.1HZ",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "258",
        "CTC1 254.1HZ",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "259",
        "CTC1 254.1HZ",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "260",
        "CTC1 254.1HZ",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "261",
        "CTC1 254.1HZ",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "262",
        "DTMF DEV 1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "263",
        "DTMF DEV 2",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "264",
        "DTMF DEV 3",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "265",
        "DTMF DEV 4",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "266",
        "DTMF DEV 5",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "267",
        "DTMF DEV 6",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "268",
        "DTMF DEV 7",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "269",
        "1750 DEV 1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "270",
        "1750 DEV 2",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "271",
        "1750 DEV 3",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "272",
        "1750 DEV 4",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "273",
        "1750 DEV 5",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "274",
        "1750 DEV 6",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "275",
        "1750 DEV 7",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "276",
        "NAR SQL",
        "255",
        "202",
        "420.025M",
        "否"
      }
    };
    private string[,] ConStrTable3 = new string[276, 6]
    {
      {
        "1",
        "接收灵敏度1",
        "255",
        "202",
        "400.025M",
        "否"
      },
      {
        "2",
        "接收灵敏度2",
        "255",
        "202",
        "410.025M",
        "否"
      },
      {
        "3",
        "接收灵敏度3",
        "255",
        "202",
        "420.025M",
        "否"
      },
      {
        "4",
        "接收灵敏度4",
        "255",
        "202",
        "430.025M",
        "否"
      },
      {
        "5",
        "接收灵敏度5",
        "255",
        "202",
        "440.025M",
        "否"
      },
      {
        "6",
        "接收灵敏度6",
        "255",
        "202",
        "450.025M",
        "否"
      },
      {
        "7",
        "接收灵敏度7",
        "255",
        "202",
        "460.025M",
        "否"
      },
      {
        "8",
        "接收灵敏度8",
        "255",
        "202",
        "470.025M",
        "否"
      },
      {
        "9",
        "接收灵敏度9",
        "255",
        "202",
        "480.025M",
        "否"
      },
      {
        "10",
        "接收灵敏度A",
        "255",
        "202",
        "490.025M",
        "否"
      },
      {
        "11",
        "接收灵敏度B",
        "255",
        "202",
        "500.975M",
        "否"
      },
      {
        "12",
        "接收灵敏度C",
        "255",
        "202",
        "510.025M",
        "否"
      },
      {
        "13",
        "接收灵敏度D",
        "255",
        "202",
        "519.975M",
        "否"
      },
      {
        "14",
        "1级静噪1",
        "255",
        "202",
        "400.025M",
        "否"
      },
      {
        "15",
        "1级静噪2",
        "255",
        "202",
        "420.025M",
        "否"
      },
      {
        "16",
        "1级静噪3",
        "255",
        "202",
        "440.025M",
        "否"
      },
      {
        "17",
        "1级静噪4",
        "255",
        "202",
        "460.025M",
        "否"
      },
      {
        "18",
        "1级静噪5",
        "255",
        "202",
        "480.025M",
        "否"
      },
      {
        "19",
        "1级静噪6",
        "255",
        "202",
        "500.025M",
        "否"
      },
      {
        "20",
        "1级静噪7",
        "255",
        "202",
        "519.975M",
        "否"
      },
      {
        "21",
        "9级静噪1",
        "255",
        "202",
        "400.025M",
        "否"
      },
      {
        "22",
        "9级静噪2",
        "255",
        "202",
        "420.025M",
        "否"
      },
      {
        "23",
        "9级静噪3",
        "255",
        "202",
        "440.025M",
        "否"
      },
      {
        "24",
        "9级静噪4",
        "255",
        "202",
        "460.025M",
        "否"
      },
      {
        "25",
        "9级静噪5",
        "255",
        "202",
        "480.025M",
        "否"
      },
      {
        "26",
        "9级静噪6",
        "255",
        "202",
        "500.025M",
        "否"
      },
      {
        "27",
        "9级静噪7",
        "255",
        "202",
        "519.975M",
        "否"
      },
      {
        "28",
        "1格场强指示",
        "255",
        "202",
        "420.025M",
        "是"
      },
      {
        "29",
        "满格场强指示",
        "255",
        "202",
        "420.025M",
        "是"
      },
      {
        "30",
        "低功率1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "31",
        "低功率2",
        "255",
        "202",
        "402.000M",
        "否"
      },
      {
        "32",
        "低功率3",
        "255",
        "202",
        "404.000M",
        "否"
      },
      {
        "33",
        "低功率4",
        "255",
        "202",
        "406.000M",
        "否"
      },
      {
        "34",
        "低功率5",
        "255",
        "202",
        "408.000M",
        "否"
      },
      {
        "35",
        "低功率6",
        "255",
        "202",
        "410.000M",
        "否"
      },
      {
        "36",
        "低功率7",
        "255",
        "202",
        "412.000M",
        "否"
      },
      {
        "37",
        "低功率8",
        "255",
        "202",
        "414.000M",
        "否"
      },
      {
        "38",
        "低功率9",
        "255",
        "202",
        "416.000M",
        "否"
      },
      {
        "39",
        "低功率10",
        "255",
        "202",
        "418.000M",
        "否"
      },
      {
        "40",
        "低功率11",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "41",
        "低功率12",
        "255",
        "202",
        "422.000M",
        "否"
      },
      {
        "42",
        "低功率13",
        "255",
        "202",
        "424.000M",
        "否"
      },
      {
        "43",
        "低功率14",
        "255",
        "202",
        "426.000M",
        "否"
      },
      {
        "44",
        "低功率15",
        "255",
        "202",
        "428.000M",
        "否"
      },
      {
        "45",
        "低功率16",
        "255",
        "202",
        "430.000M",
        "否"
      },
      {
        "46",
        "低功率17",
        "255",
        "202",
        "432.000M",
        "否"
      },
      {
        "47",
        "低功率18",
        "255",
        "202",
        "434.000M",
        "否"
      },
      {
        "48",
        "低功率19",
        "255",
        "202",
        "436.000M",
        "否"
      },
      {
        "49",
        "低功率20",
        "255",
        "202",
        "438.000M",
        "否"
      },
      {
        "50",
        "低功率21",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "51",
        "低功率22",
        "255",
        "202",
        "442.000M",
        "否"
      },
      {
        "52",
        "低功率23",
        "255",
        "202",
        "444.000M",
        "否"
      },
      {
        "53",
        "低功率24",
        "255",
        "202",
        "446.000M",
        "否"
      },
      {
        "54",
        "低功率25",
        "255",
        "202",
        "448.000M",
        "否"
      },
      {
        "55",
        "低功率26",
        "255",
        "202",
        "450.000M",
        "否"
      },
      {
        "56",
        "低功率27",
        "255",
        "202",
        "452.000M",
        "否"
      },
      {
        "57",
        "低功率28",
        "255",
        "202",
        "454.000M",
        "否"
      },
      {
        "58",
        "低功率29",
        "255",
        "202",
        "456.000M",
        "否"
      },
      {
        "59",
        "低功率30",
        "255",
        "202",
        "458.000M",
        "否"
      },
      {
        "60",
        "低功率31",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "61",
        "低功率32",
        "255",
        "202",
        "462.000M",
        "否"
      },
      {
        "62",
        "低功率33",
        "255",
        "202",
        "464.000M",
        "否"
      },
      {
        "63",
        "低功率34",
        "255",
        "202",
        "466.000M",
        "否"
      },
      {
        "64",
        "低功率35",
        "255",
        "202",
        "468.000M",
        "否"
      },
      {
        "65",
        "低功率36",
        "255",
        "202",
        "470.000M",
        "否"
      },
      {
        "66",
        "低功率37",
        "255",
        "202",
        "472.000M",
        "否"
      },
      {
        "67",
        "低功率38",
        "255",
        "202",
        "474.000M",
        "否"
      },
      {
        "68",
        "低功率39",
        "255",
        "202",
        "476.000M",
        "否"
      },
      {
        "69",
        "低功率40",
        "255",
        "202",
        "478.000M",
        "否"
      },
      {
        "70",
        "低功率41",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "71",
        "低功率42",
        "255",
        "202",
        "482.000M",
        "否"
      },
      {
        "72",
        "低功率43",
        "255",
        "202",
        "484.000M",
        "否"
      },
      {
        "73",
        "低功率44",
        "255",
        "202",
        "486.000M",
        "否"
      },
      {
        "74",
        "低功率45",
        "255",
        "202",
        "488.000M",
        "否"
      },
      {
        "75",
        "低功率46",
        "255",
        "202",
        "490.000M",
        "否"
      },
      {
        "76",
        "低功率47",
        "255",
        "202",
        "492.000M",
        "否"
      },
      {
        "77",
        "低功率48",
        "255",
        "202",
        "494.000M",
        "否"
      },
      {
        "78",
        "低功率49",
        "255",
        "202",
        "496.000M",
        "否"
      },
      {
        "79",
        "低功率50",
        "255",
        "202",
        "498.000M",
        "否"
      },
      {
        "80",
        "低功率51",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "81",
        "低功率52",
        "255",
        "202",
        "502.000M",
        "否"
      },
      {
        "82",
        "低功率53",
        "255",
        "202",
        "504.000M",
        "否"
      },
      {
        "83",
        "低功率54",
        "255",
        "202",
        "506.000M",
        "否"
      },
      {
        "84",
        "低功率55",
        "255",
        "202",
        "508.000M",
        "否"
      },
      {
        "85",
        "低功率56",
        "255",
        "202",
        "510.000M",
        "否"
      },
      {
        "86",
        "低功率57",
        "255",
        "202",
        "512.000M",
        "否"
      },
      {
        "87",
        "低功率58",
        "255",
        "202",
        "514.000M",
        "否"
      },
      {
        "88",
        "低功率59",
        "255",
        "202",
        "516.000M",
        "否"
      },
      {
        "89",
        "低功率60",
        "255",
        "202",
        "518.000M",
        "否"
      },
      {
        "90",
        "低功率61",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "91",
        "中功率1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "92",
        "中功率2",
        "255",
        "202",
        "402.000M",
        "否"
      },
      {
        "93",
        "中功率3",
        "255",
        "202",
        "404.000M",
        "否"
      },
      {
        "94",
        "中功率4",
        "255",
        "202",
        "406.000M",
        "否"
      },
      {
        "95",
        "中功率5",
        "255",
        "202",
        "408.000M",
        "否"
      },
      {
        "96",
        "中功率6",
        "255",
        "202",
        "410.000M",
        "否"
      },
      {
        "97",
        "中功率7",
        "255",
        "202",
        "412.000M",
        "否"
      },
      {
        "98",
        "中功率8",
        "255",
        "202",
        "414.000M",
        "否"
      },
      {
        "99",
        "中功率9",
        "255",
        "202",
        "416.000M",
        "否"
      },
      {
        "100",
        "中功率10",
        "255",
        "202",
        "418.000M",
        "否"
      },
      {
        "101",
        "中功率11",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "102",
        "中功率12",
        "255",
        "202",
        "422.000M",
        "否"
      },
      {
        "103",
        "中功率13",
        "255",
        "202",
        "424.000M",
        "否"
      },
      {
        "104",
        "中功率14",
        "255",
        "202",
        "426.000M",
        "否"
      },
      {
        "105",
        "中功率15",
        "255",
        "202",
        "428.000M",
        "否"
      },
      {
        "106",
        "中功率16",
        "255",
        "202",
        "430.000M",
        "否"
      },
      {
        "107",
        "中功率17",
        "255",
        "202",
        "432.000M",
        "否"
      },
      {
        "108",
        "中功率18",
        "255",
        "202",
        "434.000M",
        "否"
      },
      {
        "109",
        "中功率19",
        "255",
        "202",
        "436.000M",
        "否"
      },
      {
        "110",
        "中功率20",
        "255",
        "202",
        "438.000M",
        "否"
      },
      {
        "111",
        "中功率21",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "112",
        "中功率22",
        "255",
        "202",
        "442.000M",
        "否"
      },
      {
        "113",
        "中功率23",
        "255",
        "202",
        "444.000M",
        "否"
      },
      {
        "114",
        "中功率24",
        "255",
        "202",
        "446.000M",
        "否"
      },
      {
        "115",
        "中功率25",
        "255",
        "202",
        "448.000M",
        "否"
      },
      {
        "116",
        "中功率26",
        "255",
        "202",
        "450.000M",
        "否"
      },
      {
        "117",
        "中功率27",
        "255",
        "202",
        "452.000M",
        "否"
      },
      {
        "118",
        "中功率28",
        "255",
        "202",
        "454.000M",
        "否"
      },
      {
        "119",
        "中功率29",
        "255",
        "202",
        "456.000M",
        "否"
      },
      {
        "120",
        "中功率30",
        "255",
        "202",
        "458.000M",
        "否"
      },
      {
        "121",
        "中功率31",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "122",
        "中功率32",
        "255",
        "202",
        "462.000M",
        "否"
      },
      {
        "123",
        "中功率33",
        "255",
        "202",
        "464.000M",
        "否"
      },
      {
        "124",
        "中功率34",
        "255",
        "202",
        "466.000M",
        "否"
      },
      {
        "125",
        "中功率35",
        "255",
        "202",
        "468.000M",
        "否"
      },
      {
        "126",
        "中功率36",
        "255",
        "202",
        "470.000M",
        "否"
      },
      {
        "127",
        "中功率37",
        "255",
        "202",
        "472.000M",
        "否"
      },
      {
        "128",
        "中功率38",
        "255",
        "202",
        "474.000M",
        "否"
      },
      {
        "129",
        "中功率39",
        "255",
        "202",
        "476.000M",
        "否"
      },
      {
        "130",
        "中功率40",
        "255",
        "202",
        "478.000M",
        "否"
      },
      {
        "131",
        "中功率41",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "132",
        "中功率42",
        "255",
        "202",
        "482.000M",
        "否"
      },
      {
        "133",
        "中功率43",
        "255",
        "202",
        "484.000M",
        "否"
      },
      {
        "134",
        "中功率44",
        "255",
        "202",
        "486.000M",
        "否"
      },
      {
        "135",
        "中功率45",
        "255",
        "202",
        "488.000M",
        "否"
      },
      {
        "136",
        "中功率46",
        "255",
        "202",
        "490.000M",
        "否"
      },
      {
        "137",
        "中功率47",
        "255",
        "202",
        "492.000M",
        "否"
      },
      {
        "138",
        "中功率48",
        "255",
        "202",
        "494.000M",
        "否"
      },
      {
        "139",
        "中功率49",
        "255",
        "202",
        "496.000M",
        "否"
      },
      {
        "140",
        "中功率50",
        "255",
        "202",
        "498.000M",
        "否"
      },
      {
        "141",
        "中功率51",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "142",
        "中功率52",
        "255",
        "202",
        "502.000M",
        "否"
      },
      {
        "143",
        "中功率53",
        "255",
        "202",
        "504.000M",
        "否"
      },
      {
        "144",
        "中功率54",
        "255",
        "202",
        "506.000M",
        "否"
      },
      {
        "145",
        "中功率55",
        "255",
        "202",
        "508.000M",
        "否"
      },
      {
        "146",
        "中功率56",
        "255",
        "202",
        "510.000M",
        "否"
      },
      {
        "147",
        "中功率57",
        "255",
        "202",
        "512.000M",
        "否"
      },
      {
        "148",
        "中功率58",
        "255",
        "202",
        "514.000M",
        "否"
      },
      {
        "149",
        "中功率59",
        "255",
        "202",
        "516.000M",
        "否"
      },
      {
        "150",
        "中功率60",
        "255",
        "202",
        "518.000M",
        "否"
      },
      {
        "151",
        "中功率61",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "152",
        "高功率1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "153",
        "高功率2",
        "255",
        "202",
        "402.000M",
        "否"
      },
      {
        "154",
        "高功率3",
        "255",
        "202",
        "404.000M",
        "否"
      },
      {
        "155",
        "高功率4",
        "255",
        "202",
        "406.000M",
        "否"
      },
      {
        "156",
        "高功率5",
        "255",
        "202",
        "408.000M",
        "否"
      },
      {
        "157",
        "高功率6",
        "255",
        "202",
        "410.000M",
        "否"
      },
      {
        "158",
        "高功率7",
        "255",
        "202",
        "412.000M",
        "否"
      },
      {
        "159",
        "高功率8",
        "255",
        "202",
        "414.000M",
        "否"
      },
      {
        "160",
        "高功率9",
        "255",
        "202",
        "416.000M",
        "否"
      },
      {
        "161",
        "高功率10",
        "255",
        "202",
        "418.000M",
        "否"
      },
      {
        "162",
        "高功率11",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "163",
        "高功率12",
        "255",
        "202",
        "422.000M",
        "否"
      },
      {
        "164",
        "高功率13",
        "255",
        "202",
        "424.000M",
        "否"
      },
      {
        "165",
        "高功率14",
        "255",
        "202",
        "426.000M",
        "否"
      },
      {
        "166",
        "高功率15",
        "255",
        "202",
        "428.000M",
        "否"
      },
      {
        "167",
        "高功率16",
        "255",
        "202",
        "430.000M",
        "否"
      },
      {
        "168",
        "高功率17",
        "255",
        "202",
        "432.000M",
        "否"
      },
      {
        "169",
        "高功率18",
        "255",
        "202",
        "434.000M",
        "否"
      },
      {
        "170",
        "高功率19",
        "255",
        "202",
        "436.000M",
        "否"
      },
      {
        "171",
        "高功率20",
        "255",
        "202",
        "438.000M",
        "否"
      },
      {
        "172",
        "高功率21",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "173",
        "高功率22",
        "255",
        "202",
        "442.000M",
        "否"
      },
      {
        "174",
        "高功率23",
        "255",
        "202",
        "444.000M",
        "否"
      },
      {
        "175",
        "高功率24",
        "255",
        "202",
        "446.000M",
        "否"
      },
      {
        "176",
        "高功率25",
        "255",
        "202",
        "448.000M",
        "否"
      },
      {
        "177",
        "高功率26",
        "255",
        "202",
        "450.000M",
        "否"
      },
      {
        "178",
        "高功率27",
        "255",
        "202",
        "452.000M",
        "否"
      },
      {
        "179",
        "高功率28",
        "255",
        "202",
        "454.000M",
        "否"
      },
      {
        "180",
        "高功率29",
        "255",
        "202",
        "456.000M",
        "否"
      },
      {
        "181",
        "高功率30",
        "255",
        "202",
        "458.000M",
        "否"
      },
      {
        "182",
        "高功率31",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "183",
        "高功率32",
        "255",
        "202",
        "462.000M",
        "否"
      },
      {
        "184",
        "高功率33",
        "255",
        "202",
        "464.000M",
        "否"
      },
      {
        "185",
        "高功率34",
        "255",
        "202",
        "466.000M",
        "否"
      },
      {
        "186",
        "高功率35",
        "255",
        "202",
        "468.000M",
        "否"
      },
      {
        "187",
        "高功率36",
        "255",
        "202",
        "470.000M",
        "否"
      },
      {
        "188",
        "高功率37",
        "255",
        "202",
        "472.000M",
        "否"
      },
      {
        "189",
        "高功率38",
        "255",
        "202",
        "474.000M",
        "否"
      },
      {
        "190",
        "高功率39",
        "255",
        "202",
        "476.000M",
        "否"
      },
      {
        "191",
        "高功率40",
        "255",
        "202",
        "478.000M",
        "否"
      },
      {
        "192",
        "高功率41",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "193",
        "高功率42",
        "255",
        "202",
        "482.000M",
        "否"
      },
      {
        "194",
        "高功率43",
        "255",
        "202",
        "484.000M",
        "否"
      },
      {
        "195",
        "高功率44",
        "255",
        "202",
        "486.000M",
        "否"
      },
      {
        "196",
        "高功率45",
        "255",
        "202",
        "488.000M",
        "否"
      },
      {
        "197",
        "高功率46",
        "255",
        "202",
        "490.000M",
        "否"
      },
      {
        "198",
        "高功率47",
        "255",
        "202",
        "492.000M",
        "否"
      },
      {
        "199",
        "高功率48",
        "255",
        "202",
        "494.000M",
        "否"
      },
      {
        "200",
        "高功率49",
        "255",
        "202",
        "496.000M",
        "否"
      },
      {
        "201",
        "高功率50",
        "255",
        "202",
        "498.000M",
        "否"
      },
      {
        "202",
        "高功率51",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "203",
        "高功率52",
        "255",
        "202",
        "502.000M",
        "否"
      },
      {
        "204",
        "高功率53",
        "255",
        "202",
        "504.000M",
        "否"
      },
      {
        "205",
        "高功率54",
        "255",
        "202",
        "506.000M",
        "否"
      },
      {
        "206",
        "高功率55",
        "255",
        "202",
        "508.000M",
        "否"
      },
      {
        "207",
        "高功率56",
        "255",
        "202",
        "510.000M",
        "否"
      },
      {
        "208",
        "高功率57",
        "255",
        "202",
        "512.000M",
        "否"
      },
      {
        "209",
        "高功率58",
        "255",
        "202",
        "514.000M",
        "否"
      },
      {
        "210",
        "高功率59",
        "255",
        "202",
        "516.000M",
        "否"
      },
      {
        "211",
        "高功率60",
        "255",
        "202",
        "518.000M",
        "否"
      },
      {
        "212",
        "高功率61",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "213",
        "发射频偏1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "214",
        "发射频偏2",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "215",
        "发射频偏3",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "216",
        "发射频偏4",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "217",
        "发射频偏5",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "218",
        "发射频偏6",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "219",
        "发射频偏7",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "220",
        "数字023N_1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "221",
        "数字023N_2",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "222",
        "数字023N_3",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "223",
        "数字023N_4",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "224",
        "数字023N_5",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "225",
        "数字023N_6",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "226",
        "数字023N_7",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "227",
        "CTC1 62.5HZ",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "228",
        "CTC1 62.5HZ",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "229",
        "CTC1 62.5HZ",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "230",
        "CTC1 62.5HZ",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "231",
        "CTC1 62.5HZ",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "232",
        "CTC1 62.5HZ",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "233",
        "CTC1 62.5HZ",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "234",
        "CTC1 91.5HZ",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "235",
        "CTC1 91.5HZ",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "236",
        "CTC1 91.5HZ",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "237",
        "CTC1 91.5HZ",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "238",
        "CTC1 91.5HZ",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "239",
        "CTC1 91.5HZ",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "240",
        "CTC1 91.5HZ",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "241",
        "CTC1 151.4HZ",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "242",
        "CTC1 151.4HZ",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "243",
        "CTC1 151.4HZ",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "244",
        "CTC1 151.4HZ",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "245",
        "CTC1 151.4HZ",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "246",
        "CTC1 151.4HZ",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "247",
        "CTC1 151.4HZ",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "248",
        "CTC1 192.8HZ",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "249",
        "CTC1 192.8HZ",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "250",
        "CTC1 192.8HZ",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "251",
        "CTC1 192.8HZ",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "252",
        "CTC1 192.8HZ",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "253",
        "CTC1 192.8HZ",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "254",
        "CTC1 192.8HZ",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "255",
        "CTC1 254.1HZ",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "256",
        "CTC1 254.1HZ",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "257",
        "CTC1 254.1HZ",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "258",
        "CTC1 254.1HZ",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "259",
        "CTC1 254.1HZ",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "260",
        "CTC1 254.1HZ",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "261",
        "CTC1 254.1HZ",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "262",
        "DTMF 频偏1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "263",
        "DTMF 频偏2",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "264",
        "DTMF 频偏3",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "265",
        "DTMF 频偏4",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "266",
        "DTMF 频偏5",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "267",
        "DTMF 频偏6",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "268",
        "DTMF 频偏7",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "269",
        "1750 频偏1",
        "255",
        "202",
        "400.000M",
        "否"
      },
      {
        "270",
        "1750 频偏2",
        "255",
        "202",
        "420.000M",
        "否"
      },
      {
        "271",
        "1750 频偏3",
        "255",
        "202",
        "440.000M",
        "否"
      },
      {
        "272",
        "1750 频偏4",
        "255",
        "202",
        "460.000M",
        "否"
      },
      {
        "273",
        "1750 频偏5",
        "255",
        "202",
        "480.000M",
        "否"
      },
      {
        "274",
        "1750 频偏6",
        "255",
        "202",
        "500.000M",
        "否"
      },
      {
        "275",
        "1750 频偏7",
        "255",
        "202",
        "520.000M",
        "否"
      },
      {
        "276",
        "窄带 静噪",
        "255",
        "202",
        "420.025M",
        "否"
      }
    };
    private int[] ConStrTable3Num = new int[17]
    {
      13,
      7,
      7,
      2,
      61,
      61,
      61,
      7,
      7,
      7,
      7,
      7,
      7,
      7,
      7,
      7,
      1
    };
    private int[] ConStrTable1ListNum = new int[11]
    {
      9,
      12,
      15,
      17,
      80,
      83,
      86,
      101,
      104,
      107,
      108
    };
    private int[] ConStrTable2ListNum = new int[11]
    {
      9,
      13,
      17,
      19,
      112,
      116,
      120,
      140,
      144,
      148,
      149
    };
    private int[] ConStrTable3ListNum = new int[11]
    {
      13,
      20,
      27,
      29,
      212,
      219,
      226,
      5,
      12,
      19,
      20
    };
    private int[] ConStrTable01Num = new int[17]
    {
      9,
      12,
      15,
      17,
      38,
      59,
      80,
      83,
      86,
      89,
      92,
      95,
      98,
      101,
      104,
      107,
      108
    };
    private int[] ConStrTable02Num = new int[17]
    {
      9,
      13,
      17,
      19,
      50,
      81,
      112,
      116,
      120,
      124,
      128,
      132,
      136,
      140,
      144,
      148,
      149
    };
    private int[] ConStrTable03Num = new int[17]
    {
      13,
      20,
      27,
      29,
      90,
      151,
      212,
      219,
      226,
      233,
      240,
      247,
      254,
      261,
      268,
      275,
      276
    };
    public string BaudRadio = "9600";
    private int ConOneTmReadCt = 32;
    private int ConOneTmWriteCt = 32;
    private int ConTetBegAdd = 5808;
    private int ConTestBand1Tm = 4;
    private int ConTestBand2Tm = 5;
    private int ConTestBand3Tm = 9;
    private int ConTestReadDataTm = 18;
    private int ConTestWriteDataTm = 18;
    public string GiFilePathName = "TestModDef.icf";
    private string GiCurrDataBuf;
    private string GiDefDataBuf;
    private string ComTempStr;
    private string[] WriteDataBuf;
    private int CurrtabControl;
    private int[] TabControlBuf = new int[3];
    private bool GbWRCurreDataEn = false;
    private bool OnlyOneLine = false;
    private bool ComFail = false;
    private bool GbTestMod = false;
    private int GbResSendTm;
    private string CurrCommandStr;
    private byte CurrSendByteCt;
    private byte CurrAckByteCt;
    private bool GbAutoAdd = false;
    private bool GbAtLineMod = false;
    private bool GbItemAjdEn = false;
    private string[,] ConStrTable;
    private int[] ConStrTableNum;
    private int IicAddress;
    private int GiTestWriteDataTm = 3;
    private int CurrentCom = 1;
    private int SendByte = 0;
    private int CurrAdjData;
    private int CurrAdjItem;
    private byte[] RxBuffer = new byte[200];
    private byte CommuCt = 0;
    private byte CommuItem = 0;

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.dataGridView1 = new DataGridView();
      this.groupBox2 = new GroupBox();
      this.groupBox6 = new GroupBox();
      this.textBox1 = new TextBox();
      this.label32 = new Label();
      this.radioButton2 = new RadioButton();
      this.radioButton1 = new RadioButton();
      this.button11 = new Button();
      this.button10 = new Button();
      this.comboBox4 = new ComboBox();
      this.button9 = new Button();
      this.button8 = new Button();
      this.button1 = new Button();
      this.button2 = new Button();
      this.groupBox5 = new GroupBox();
      this.listBox1 = new ListBox();
      this.groupBox4 = new GroupBox();
      this.button3 = new Button();
      this.comboBox1 = new ComboBox();
      this.label1 = new Label();
      this.groupBox3 = new GroupBox();
      this.button5 = new Button();
      this.button7 = new Button();
      this.button4 = new Button();
      this.trackBar1 = new TrackBar();
      this.button6 = new Button();
      this.numericUpDown1 = new NumericUpDown();
      this.serialPort1 = new SerialPort(this.components);
      this.tabControl1 = new TabControl();
      this.tabPage1 = new TabPage();
      this.numericUpDown2 = new NumericUpDown();
      this.tabPage2 = new TabPage();
      this.numericUpDown4 = new NumericUpDown();
      this.dataGridView2 = new DataGridView();
      this.tabPage3 = new TabPage();
      this.numericUpDown3 = new NumericUpDown();
      this.dataGridView3 = new DataGridView();
      this.openFileDialog1 = new OpenFileDialog();
      ((ISupportInitialize) this.dataGridView1).BeginInit();
      this.groupBox2.SuspendLayout();
      this.groupBox6.SuspendLayout();
      this.groupBox5.SuspendLayout();
      this.groupBox4.SuspendLayout();
      this.groupBox3.SuspendLayout();
      this.trackBar1.BeginInit();
      this.numericUpDown1.BeginInit();
      this.tabControl1.SuspendLayout();
      this.tabPage1.SuspendLayout();
      this.numericUpDown2.BeginInit();
      this.tabPage2.SuspendLayout();
      this.numericUpDown4.BeginInit();
      ((ISupportInitialize) this.dataGridView2).BeginInit();
      this.tabPage3.SuspendLayout();
      this.numericUpDown3.BeginInit();
      ((ISupportInitialize) this.dataGridView3).BeginInit();
      this.SuspendLayout();
      this.dataGridView1.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
      this.dataGridView1.Location = new Point(116, 142);
      this.dataGridView1.Name = "dataGridView1";
      this.dataGridView1.RowTemplate.Height = 23;
      this.dataGridView1.Size = new Size(62, 31);
      this.dataGridView1.TabIndex = 2;
      this.dataGridView1.CellDoubleClick += new DataGridViewCellEventHandler(this.dataGridView1_CellDoubleClick);
      this.dataGridView1.CellClick += new DataGridViewCellEventHandler(this.dataGridView1_CellClick);
      this.dataGridView1.KeyPress += new KeyPressEventHandler(this.dataGridView1_KeyPress);
      this.groupBox2.Controls.Add((Control) this.groupBox6);
      this.groupBox2.Controls.Add((Control) this.groupBox5);
      this.groupBox2.Controls.Add((Control) this.groupBox4);
      this.groupBox2.Controls.Add((Control) this.groupBox3);
      this.groupBox2.Location = new Point(404, 0);
      this.groupBox2.Name = "groupBox2";
      this.groupBox2.Size = new Size(335, 523);
      this.groupBox2.TabIndex = 0;
      this.groupBox2.TabStop = false;
      this.groupBox2.Text = "groupBox2";
      this.groupBox6.Controls.Add((Control) this.textBox1);
      this.groupBox6.Controls.Add((Control) this.label32);
      this.groupBox6.Controls.Add((Control) this.radioButton2);
      this.groupBox6.Controls.Add((Control) this.radioButton1);
      this.groupBox6.Controls.Add((Control) this.button11);
      this.groupBox6.Controls.Add((Control) this.button10);
      this.groupBox6.Controls.Add((Control) this.comboBox4);
      this.groupBox6.Controls.Add((Control) this.button9);
      this.groupBox6.Controls.Add((Control) this.button8);
      this.groupBox6.Controls.Add((Control) this.button1);
      this.groupBox6.Controls.Add((Control) this.button2);
      this.groupBox6.Location = new Point(3, 367);
      this.groupBox6.Name = "groupBox6";
      this.groupBox6.Size = new Size(318, 149);
      this.groupBox6.TabIndex = 3;
      this.groupBox6.TabStop = false;
      this.groupBox6.Text = "groupBox6";
      this.textBox1.Location = new Point(262, 106);
      this.textBox1.Name = "textBox1";
      this.textBox1.Size = new Size(48, 21);
      this.textBox1.TabIndex = 61;
      this.textBox1.Text = "15";
      this.textBox1.Visible = false;
      this.label32.AutoSize = true;
      this.label32.Location = new Point(211, 87);
      this.label32.Name = "label32";
      this.label32.Size = new Size(65, 12);
      this.label32.TabIndex = 60;
      this.label32.Text = "Delay Time";
      this.label32.Visible = false;
      this.radioButton2.AutoSize = true;
      this.radioButton2.Location = new Point(124, 123);
      this.radioButton2.Name = "radioButton2";
      this.radioButton2.Size = new Size(71, 16);
      this.radioButton2.TabIndex = 23;
      this.radioButton2.Text = "自动赋值";
      this.radioButton2.UseVisualStyleBackColor = true;
      this.radioButton2.CheckedChanged += new EventHandler(this.radioButton2_CheckedChanged);
      this.radioButton1.AutoSize = true;
      this.radioButton1.Checked = true;
      this.radioButton1.Location = new Point(12, 123);
      this.radioButton1.Name = "radioButton1";
      this.radioButton1.Size = new Size(95, 16);
      this.radioButton1.TabIndex = 6;
      this.radioButton1.TabStop = true;
      this.radioButton1.Text = "取消自动赋值";
      this.radioButton1.UseVisualStyleBackColor = true;
      this.radioButton1.CheckedChanged += new EventHandler(this.radioButton1_CheckedChanged);
      this.button11.Location = new Point(226, 20);
      this.button11.Name = "button11";
      this.button11.Size = new Size(75, 23);
      this.button11.TabIndex = 3;
      this.button11.Text = "打开测试文件";
      this.button11.UseVisualStyleBackColor = true;
      this.button11.Click += new EventHandler(this.button11_Click);
      this.button10.Location = new Point(134, 75);
      this.button10.Name = "button10";
      this.button10.Size = new Size(75, 36);
      this.button10.TabIndex = 22;
      this.button10.Text = "写入当前值";
      this.button10.UseVisualStyleBackColor = true;
      this.button10.Click += new EventHandler(this.button10_Click);
      this.comboBox4.Enabled = false;
      this.comboBox4.FormattingEnabled = true;
      this.comboBox4.Items.AddRange(new object[2]
      {
        (object) "收发同线",
        (object) "收发异线"
      });
      this.comboBox4.Location = new Point(201, 122);
      this.comboBox4.Name = "comboBox4";
      this.comboBox4.Size = new Size(76, 20);
      this.comboBox4.TabIndex = 21;
      this.comboBox4.Text = "收发同线";
      this.comboBox4.SelectedIndexChanged += new EventHandler(this.comboBox4_SelectedIndexChanged);
      this.button9.Location = new Point(134, 20);
      this.button9.Name = "button9";
      this.button9.Size = new Size(75, 36);
      this.button9.TabIndex = 21;
      this.button9.Text = "button9";
      this.button9.UseVisualStyleBackColor = true;
      this.button9.Click += new EventHandler(this.button9_Click);
      this.button8.Location = new Point(226, 49);
      this.button8.Name = "button8";
      this.button8.Size = new Size(75, 36);
      this.button8.TabIndex = 20;
      this.button8.Text = "button8";
      this.button8.UseVisualStyleBackColor = true;
      this.button8.Click += new EventHandler(this.button8_Click);
      this.button1.Location = new Point(32, 22);
      this.button1.Name = "button1";
      this.button1.Size = new Size(75, 36);
      this.button1.TabIndex = 0;
      this.button1.Text = "button1";
      this.button1.UseVisualStyleBackColor = true;
      this.button1.Click += new EventHandler(this.button1_Click);
      this.button2.Location = new Point(32, 75);
      this.button2.Name = "button2";
      this.button2.Size = new Size(75, 36);
      this.button2.TabIndex = 1;
      this.button2.Text = "button2";
      this.button2.UseVisualStyleBackColor = true;
      this.button2.Click += new EventHandler(this.button2_Click);
      this.groupBox5.Controls.Add((Control) this.listBox1);
      this.groupBox5.Location = new Point(3, 84);
      this.groupBox5.Name = "groupBox5";
      this.groupBox5.Size = new Size(325, 123);
      this.groupBox5.TabIndex = 2;
      this.groupBox5.TabStop = false;
      this.groupBox5.Text = "groupBox5";
      this.listBox1.Font = new Font("宋体", 9f, FontStyle.Regular, GraphicsUnit.Point, (byte) 134);
      this.listBox1.FormattingEnabled = true;
      this.listBox1.HorizontalScrollbar = true;
      this.listBox1.ImeMode = ImeMode.NoControl;
      this.listBox1.ItemHeight = 12;
      this.listBox1.Location = new Point(3, 17);
      this.listBox1.Name = "listBox1";
      this.listBox1.Size = new Size(316, 100);
      this.listBox1.TabIndex = 0;
      this.groupBox4.Controls.Add((Control) this.button3);
      this.groupBox4.Controls.Add((Control) this.comboBox1);
      this.groupBox4.Controls.Add((Control) this.label1);
      this.groupBox4.Location = new Point(3, 17);
      this.groupBox4.Name = "groupBox4";
      this.groupBox4.Size = new Size(325, 61);
      this.groupBox4.TabIndex = 1;
      this.groupBox4.TabStop = false;
      this.groupBox4.Text = "groupBox4";
      this.button3.Location = new Point(213, 17);
      this.button3.Name = "button3";
      this.button3.Size = new Size(83, 38);
      this.button3.TabIndex = 2;
      this.button3.Text = "button3";
      this.button3.UseVisualStyleBackColor = true;
      this.button3.Click += new EventHandler(this.button3_Click);
      this.comboBox1.Font = new Font("宋体", 15.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 134);
      this.comboBox1.FormattingEnabled = true;
      this.comboBox1.Location = new Point(92, 26);
      this.comboBox1.Name = "comboBox1";
      this.comboBox1.Size = new Size(99, 29);
      this.comboBox1.TabIndex = 1;
      this.comboBox1.SelectedIndexChanged += new EventHandler(this.comboBox1_SelectedIndexChanged);
      this.label1.AutoSize = true;
      this.label1.Location = new Point(26, 37);
      this.label1.Name = "label1";
      this.label1.Size = new Size(59, 12);
      this.label1.TabIndex = 0;
      this.label1.Text = "串口选择:";
      this.label1.DoubleClick += new EventHandler(this.label1_DoubleClick);
      this.groupBox3.Controls.Add((Control) this.button5);
      this.groupBox3.Controls.Add((Control) this.button7);
      this.groupBox3.Controls.Add((Control) this.button4);
      this.groupBox3.Controls.Add((Control) this.trackBar1);
      this.groupBox3.Controls.Add((Control) this.button6);
      this.groupBox3.Controls.Add((Control) this.numericUpDown1);
      this.groupBox3.Location = new Point(3, 213);
      this.groupBox3.Name = "groupBox3";
      this.groupBox3.Size = new Size(318, 148);
      this.groupBox3.TabIndex = 0;
      this.groupBox3.TabStop = false;
      this.groupBox3.Text = "groupBox3";
      this.button5.Location = new Point(235, 58);
      this.button5.Name = "button5";
      this.button5.Size = new Size(59, 38);
      this.button5.TabIndex = 1;
      this.button5.Text = "button5";
      this.button5.UseVisualStyleBackColor = true;
      this.button5.Click += new EventHandler(this.button5_Click);
      this.button7.Location = new Point(172, 99);
      this.button7.Name = "button7";
      this.button7.Size = new Size(124, 38);
      this.button7.TabIndex = 3;
      this.button7.Text = "button7";
      this.button7.UseVisualStyleBackColor = true;
      this.button7.Click += new EventHandler(this.button7_Click);
      this.button4.Location = new Point(170, 58);
      this.button4.Name = "button4";
      this.button4.Size = new Size(59, 38);
      this.button4.TabIndex = 0;
      this.button4.Text = "button4";
      this.button4.UseVisualStyleBackColor = true;
      this.button4.Click += new EventHandler(this.button4_Click);
      this.trackBar1.Location = new Point(6, 14);
      this.trackBar1.Name = "trackBar1";
      this.trackBar1.Size = new Size(308, 45);
      this.trackBar1.TabIndex = 3;
      this.trackBar1.ValueChanged += new EventHandler(this.trackBar1_ValueChanged);
      this.trackBar1.KeyPress += new KeyPressEventHandler(this.trackBar1_KeyPress);
      this.button6.Location = new Point(42, 99);
      this.button6.Name = "button6";
      this.button6.Size = new Size(124, 38);
      this.button6.TabIndex = 2;
      this.button6.Text = "button6";
      this.button6.UseVisualStyleBackColor = true;
      this.button6.Click += new EventHandler(this.button6_Click);
      this.numericUpDown1.Font = new Font("宋体", 15.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 134);
      this.numericUpDown1.Location = new Point(42, 65);
      this.numericUpDown1.Name = "numericUpDown1";
      this.numericUpDown1.Size = new Size(102, 31);
      this.numericUpDown1.TabIndex = 2;
      this.numericUpDown1.ValueChanged += new EventHandler(this.numericUpDown1_ValueChanged);
      this.serialPort1.DataReceived += new SerialDataReceivedEventHandler(this.serialPort1_DataReceived);
      this.tabControl1.Controls.Add((Control) this.tabPage1);
      this.tabControl1.Controls.Add((Control) this.tabPage2);
      this.tabControl1.Controls.Add((Control) this.tabPage3);
      this.tabControl1.Location = new Point(1, 0);
      this.tabControl1.Name = "tabControl1";
      this.tabControl1.SelectedIndex = 0;
      this.tabControl1.Size = new Size(397, 523);
      this.tabControl1.TabIndex = 3;
      this.tabControl1.SelectedIndexChanged += new EventHandler(this.tabControl1_SelectedIndexChanged);
      this.tabPage1.Controls.Add((Control) this.numericUpDown2);
      this.tabPage1.Controls.Add((Control) this.dataGridView1);
      this.tabPage1.Location = new Point(4, 22);
      this.tabPage1.Name = "tabPage1";
      this.tabPage1.Padding = new Padding(3);
      this.tabPage1.Size = new Size(389, 497);
      this.tabPage1.TabIndex = 0;
      this.tabPage1.Text = "tabPage1";
      this.tabPage1.UseVisualStyleBackColor = true;
      this.numericUpDown2.Location = new Point(134, 266);
      this.numericUpDown2.Maximum = new Decimal(new int[4]
      {
        (int) byte.MaxValue,
        0,
        0,
        0
      });
      this.numericUpDown2.Name = "numericUpDown2";
      this.numericUpDown2.Size = new Size(50, 21);
      this.numericUpDown2.TabIndex = 4;
      this.numericUpDown2.Visible = false;
      this.numericUpDown2.Leave += new EventHandler(this.numericUpDown2_Leave);
      this.tabPage2.Controls.Add((Control) this.numericUpDown4);
      this.tabPage2.Controls.Add((Control) this.dataGridView2);
      this.tabPage2.Location = new Point(4, 22);
      this.tabPage2.Name = "tabPage2";
      this.tabPage2.Padding = new Padding(3);
      this.tabPage2.Size = new Size(389, 497);
      this.tabPage2.TabIndex = 1;
      this.tabPage2.Text = "tabPage2";
      this.tabPage2.UseVisualStyleBackColor = true;
      this.numericUpDown4.Location = new Point(169, 238);
      this.numericUpDown4.Maximum = new Decimal(new int[4]
      {
        (int) byte.MaxValue,
        0,
        0,
        0
      });
      this.numericUpDown4.Name = "numericUpDown4";
      this.numericUpDown4.Size = new Size(50, 21);
      this.numericUpDown4.TabIndex = 5;
      this.numericUpDown4.Visible = false;
      this.numericUpDown4.Leave += new EventHandler(this.numericUpDown4_Leave);
      this.dataGridView2.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
      this.dataGridView2.Location = new Point(163, 301);
      this.dataGridView2.Name = "dataGridView2";
      this.dataGridView2.RowTemplate.Height = 23;
      this.dataGridView2.Size = new Size(62, 31);
      this.dataGridView2.TabIndex = 3;
      this.dataGridView2.CellDoubleClick += new DataGridViewCellEventHandler(this.dataGridView2_CellDoubleClick);
      this.dataGridView2.CellClick += new DataGridViewCellEventHandler(this.dataGridView2_CellClick);
      this.dataGridView2.KeyPress += new KeyPressEventHandler(this.dataGridView2_KeyPress);
      this.tabPage3.Controls.Add((Control) this.numericUpDown3);
      this.tabPage3.Controls.Add((Control) this.dataGridView3);
      this.tabPage3.Location = new Point(4, 22);
      this.tabPage3.Name = "tabPage3";
      this.tabPage3.Padding = new Padding(3);
      this.tabPage3.Size = new Size(389, 497);
      this.tabPage3.TabIndex = 2;
      this.tabPage3.Text = "tabPage3";
      this.tabPage3.UseVisualStyleBackColor = true;
      this.numericUpDown3.Location = new Point(169, 238);
      this.numericUpDown3.Maximum = new Decimal(new int[4]
      {
        (int) byte.MaxValue,
        0,
        0,
        0
      });
      this.numericUpDown3.Name = "numericUpDown3";
      this.numericUpDown3.Size = new Size(50, 21);
      this.numericUpDown3.TabIndex = 5;
      this.numericUpDown3.Visible = false;
      this.numericUpDown3.Leave += new EventHandler(this.numericUpDown3_Leave);
      this.dataGridView3.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
      this.dataGridView3.Location = new Point(163, 301);
      this.dataGridView3.Name = "dataGridView3";
      this.dataGridView3.RowTemplate.Height = 23;
      this.dataGridView3.Size = new Size(62, 31);
      this.dataGridView3.TabIndex = 3;
      this.dataGridView3.CellDoubleClick += new DataGridViewCellEventHandler(this.dataGridView3_CellDoubleClick);
      this.dataGridView3.CellClick += new DataGridViewCellEventHandler(this.dataGridView3_CellClick);
      this.dataGridView3.KeyPress += new KeyPressEventHandler(this.dataGridView3_KeyPress);
      this.openFileDialog1.FileName = "openFileDialog1";
      this.openFileDialog1.FileOk += new CancelEventHandler(this.openFileDialog1_FileOk);
      this.AutoScaleDimensions = new SizeF(6f, 12f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(745, 531);
      this.Controls.Add((Control) this.tabControl1);
      this.Controls.Add((Control) this.groupBox2);
      this.Name = nameof (TestModWin);
      this.Text = nameof (TestModWin);
      this.Load += new EventHandler(this.TestModWin_Load);
      this.FormClosed += new FormClosedEventHandler(this.TestModWin_FormClosed);
      ((ISupportInitialize) this.dataGridView1).EndInit();
      this.groupBox2.ResumeLayout(false);
      this.groupBox6.ResumeLayout(false);
      this.groupBox6.PerformLayout();
      this.groupBox5.ResumeLayout(false);
      this.groupBox4.ResumeLayout(false);
      this.groupBox4.PerformLayout();
      this.groupBox3.ResumeLayout(false);
      this.groupBox3.PerformLayout();
      this.trackBar1.EndInit();
      this.numericUpDown1.EndInit();
      this.tabControl1.ResumeLayout(false);
      this.tabPage1.ResumeLayout(false);
      this.numericUpDown2.EndInit();
      this.tabPage2.ResumeLayout(false);
      this.numericUpDown4.EndInit();
      ((ISupportInitialize) this.dataGridView2).EndInit();
      this.tabPage3.ResumeLayout(false);
      this.numericUpDown3.EndInit();
      ((ISupportInitialize) this.dataGridView3).EndInit();
      this.ResumeLayout(false);
    }

    public TestModWin()
    {
      this.InitializeComponent();
      this.StartPosition = FormStartPosition.CenterScreen;
    }

    private void CtrLResAllPro(object sender, EventArgs e)
    {
      if (this.GbTestMod)
      {
        this.button4.Enabled = false;
        this.button5.Enabled = false;
        this.button6.Enabled = false;
        this.button7.Enabled = false;
        this.numericUpDown1.Enabled = false;
        this.trackBar1.Enabled = false;
      }
      else
      {
        this.button1.Text = TestModWin.Button_EngCh[Class1.English_En, 5];
        this.button1.Enabled = true;
        this.button2.Enabled = false;
        this.button9.Enabled = false;
        this.button10.Enabled = false;
        this.button3.Text = TestModWin.Button_EngCh[Class1.English_En, 4];
        this.button3.Enabled = true;
      }
      this.button4.Enabled = false;
      this.button5.Enabled = false;
      this.button6.Enabled = false;
      this.button7.Enabled = false;
      this.numericUpDown1.Enabled = false;
      this.trackBar1.Enabled = false;
    }

    private void TimerResPro()
    {
      TestModWin.aTimer1 = new System.Timers.Timer(10000.0);
      TestModWin.aTimer1.Elapsed += new ElapsedEventHandler(this.OnTimedEvent);
      TestModWin.aTimer1.Enabled = false;
    }

    private void TimeRestartPro()
    {
      TestModWin.aTimer1.Enabled = false;
      TestModWin.aTimer1.Interval = 1000.0;
      TestModWin.aTimer1.Enabled = true;
    }

    private void OnTimedEvent(object source, ElapsedEventArgs e)
    {
      byte[] numArray = new byte[200];
      ++this.GbResSendTm;
      if (this.GbResSendTm < 5)
      {
        if (!this.serialPort1.IsOpen)
          return;
        this.serialPort1.DiscardInBuffer();
        this.SendComDatPro1(this.CurrCommandStr, this.CurrSendByteCt, this.CurrAckByteCt);
      }
      else
      {
        if (!this.GbAtLineMod)
          this.serialPort1.Close();
        else
          this.GbAtLineMod = false;
        TestModWin.aTimer1.Enabled = false;
        this.Invoke((Delegate) new EventHandler(this.CtrLResAllPro));
        string str = this.MessBoxName[Class1.English_En, 4];
      }
    }

    private void loadDataGridViewPro(DataGridView GridViewName, byte GridviewNum)
    {
      公共控件操作.DataGridViewResPro(GridViewName);
      DataGridViewTextBoxColumn acCode1 = new DataGridViewTextBoxColumn();
      DataGridViewTextBoxColumn acCode2 = new DataGridViewTextBoxColumn();
      DataGridViewTextBoxColumn acCode3 = new DataGridViewTextBoxColumn();
      DataGridViewTextBoxColumn acCode4 = new DataGridViewTextBoxColumn();
      DataGridViewTextBoxColumn acCode5 = new DataGridViewTextBoxColumn();
      公共控件操作.DataGridViewColumnAddPro(GridViewName, acCode5, TestModWin.DataGridName[Class1.English_En, 0]);
      acCode5.Width = 40;
      公共控件操作.DataGridViewColumnAddPro(GridViewName, acCode1, TestModWin.DataGridName[Class1.English_En, 1]);
      公共控件操作.DataGridViewColumnAddPro(GridViewName, acCode2, TestModWin.DataGridName[Class1.English_En, 2]);
      acCode2.Width = 50;
      公共控件操作.DataGridViewColumnAddPro(GridViewName, acCode3, TestModWin.DataGridName[Class1.English_En, 3]);
      acCode3.Width = 50;
      公共控件操作.DataGridViewColumnAddPro(GridViewName, acCode4, TestModWin.DataGridName[Class1.English_En, 4]);
      acCode4.Width = 140;
      if ((byte) 1 == GridviewNum)
      {
        this.ConStrTable = Class1.English_En != 1 ? this.ConStrTable1 : this.ConStrTable11;
        this.ConStrTableNum = this.ConStrTable1Num;
      }
      else if ((byte) 2 == GridviewNum)
      {
        this.ConStrTable = Class1.English_En != 1 ? this.ConStrTable2 : this.ConStrTable22;
        this.ConStrTableNum = this.ConStrTable2Num;
      }
      else if ((byte) 3 == GridviewNum)
      {
        this.ConStrTable = Class1.English_En != 1 ? this.ConStrTable3 : this.ConStrTable33;
        this.ConStrTableNum = this.ConStrTable3Num;
      }
      int count = this.ConStrTable.GetLength(0) - 1;
      GridViewName.Rows.Add(count);
      for (int index = 0; (long) index < this.ConStrTable.GetLongLength(0); ++index)
      {
        GridViewName.Rows[index].Cells[0].Value = (object) this.ConStrTable[index, 0];
        GridViewName.Rows[index].Cells[1].Value = (object) this.ConStrTable[index, 1];
        GridViewName.Rows[index].Cells[2].Value = (object) this.ConStrTable[index, 2];
        GridViewName.Rows[index].Cells[3].Value = (object) this.ConStrTable[index, 3];
        GridViewName.Rows[index].Cells[4].Value = (object) this.ConStrTable[index, 4];
        if (index < this.ConStrTableNum[0])
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.YellowGreen;
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1])
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.GreenYellow;
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2])
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.YellowGreen;
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3])
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.GreenYellow;
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4])
        {
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.Red;
          int num = this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3];
          if ((index - num) % 5 == 0)
            GridViewName.Rows[index].Visible = true;
          else
            GridViewName.Rows[index].Visible = false;
        }
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4] + this.ConStrTableNum[5])
        {
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.RoyalBlue;
          int num = this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4];
          if ((index - num) % 5 == 0)
            GridViewName.Rows[index].Visible = true;
          else
            GridViewName.Rows[index].Visible = false;
        }
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4] + this.ConStrTableNum[5] + this.ConStrTableNum[6])
        {
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.SandyBrown;
          int num = this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4] + this.ConStrTableNum[5];
          if ((index - num) % 5 == 0)
            GridViewName.Rows[index].Visible = true;
          else
            GridViewName.Rows[index].Visible = false;
        }
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4] + this.ConStrTableNum[5] + this.ConStrTableNum[6] + this.ConStrTableNum[7])
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.GreenYellow;
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4] + this.ConStrTableNum[5] + this.ConStrTableNum[6] + this.ConStrTableNum[7] + this.ConStrTableNum[7])
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.YellowGreen;
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4] + this.ConStrTableNum[5] + this.ConStrTableNum[6] + this.ConStrTableNum[7] + this.ConStrTableNum[7] + this.ConStrTableNum[8])
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.GreenYellow;
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4] + this.ConStrTableNum[5] + this.ConStrTableNum[6] + this.ConStrTableNum[7] + this.ConStrTableNum[7] + this.ConStrTableNum[8] + this.ConStrTableNum[9])
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.YellowGreen;
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4] + this.ConStrTableNum[5] + this.ConStrTableNum[6] + this.ConStrTableNum[7] + this.ConStrTableNum[7] + this.ConStrTableNum[8] + this.ConStrTableNum[9] + this.ConStrTableNum[10])
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.GreenYellow;
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4] + this.ConStrTableNum[5] + this.ConStrTableNum[6] + this.ConStrTableNum[7] + this.ConStrTableNum[7] + this.ConStrTableNum[8] + this.ConStrTableNum[9] + this.ConStrTableNum[10] + this.ConStrTableNum[11])
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.YellowGreen;
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4] + this.ConStrTableNum[5] + this.ConStrTableNum[6] + this.ConStrTableNum[7] + this.ConStrTableNum[7] + this.ConStrTableNum[8] + this.ConStrTableNum[9] + this.ConStrTableNum[10] + this.ConStrTableNum[11] + this.ConStrTableNum[12])
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.GreenYellow;
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4] + this.ConStrTableNum[5] + this.ConStrTableNum[6] + this.ConStrTableNum[7] + this.ConStrTableNum[7] + this.ConStrTableNum[8] + this.ConStrTableNum[9] + this.ConStrTableNum[10] + this.ConStrTableNum[11] + this.ConStrTableNum[12] + this.ConStrTableNum[13])
        {
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.YellowGreen;
          GridViewName.Rows[index].Visible = false;
        }
        else if (index < this.ConStrTableNum[0] + this.ConStrTableNum[1] + this.ConStrTableNum[2] + this.ConStrTableNum[3] + this.ConStrTableNum[4] + this.ConStrTableNum[5] + this.ConStrTableNum[6] + this.ConStrTableNum[7] + this.ConStrTableNum[7] + this.ConStrTableNum[8] + this.ConStrTableNum[9] + this.ConStrTableNum[10] + this.ConStrTableNum[11] + this.ConStrTableNum[12] + this.ConStrTableNum[13] + this.ConStrTableNum[14])
        {
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.GreenYellow;
          GridViewName.Rows[index].Visible = false;
        }
        else
          GridViewName.Rows[index].Cells[0].Style.BackColor = Color.YellowGreen;
      }
    }

    private void load_GroupBox1Pro()
    {
      this.tabPage1.Text = "150M";
      this.loadDataGridViewPro(this.dataGridView1, (byte) 1);
      this.tabPage2.Text = "230M";
      this.loadDataGridViewPro(this.dataGridView2, (byte) 2);
      this.tabPage3.Text = "450M";
      this.loadDataGridViewPro(this.dataGridView3, (byte) 3);
      this.ConStrTable = this.ConStrTable1;
    }

    private void load_GroupBox3Pro()
    {
      this.groupBox3.Text = "";
      this.numericUpDown1.Minimum = 0M;
      this.numericUpDown1.Maximum = 255M;
      this.numericUpDown1.Increment = 1M;
      this.numericUpDown1.Enabled = false;
      this.trackBar1.Minimum = 0;
      this.trackBar1.Maximum = (int) byte.MaxValue;
      this.trackBar1.SmallChange = 1;
      this.trackBar1.Enabled = false;
      this.button4.Text = TestModWin.Button_EngCh[Class1.English_En, 0];
      this.button5.Text = TestModWin.Button_EngCh[Class1.English_En, 1];
      this.button6.Text = TestModWin.Button_EngCh[Class1.English_En, 2];
      this.button7.Text = TestModWin.Button_EngCh[Class1.English_En, 3];
      this.button4.Enabled = false;
      this.button5.Enabled = false;
      this.button6.Enabled = false;
      this.button7.Enabled = false;
    }

    private void load_GroupBox4Pro()
    {
      this.groupBox4.Text = "";
      this.label1.Text = TestModWin.Button_EngCh[Class1.English_En, 13];
      this.button3.Text = TestModWin.Button_EngCh[Class1.English_En, 4];
    }

    private void load_GroupBox5Pro() => this.groupBox5.Text = "";

    private void load_GroupBox6Pro()
    {
      this.groupBox6.Text = "";
      this.button1.Text = TestModWin.Button_EngCh[Class1.English_En, 5];
      this.button1.Enabled = true;
      this.button2.Text = TestModWin.Button_EngCh[Class1.English_En, 6];
      this.button2.Enabled = false;
      this.button9.Text = TestModWin.Button_EngCh[Class1.English_En, 7];
      this.button9.Enabled = false;
      this.button8.Text = TestModWin.Button_EngCh[Class1.English_En, 8];
      this.button8.Enabled = true;
      this.button10.Text = TestModWin.Button_EngCh[Class1.English_En, 9];
      this.button10.Enabled = false;
      this.button11.Text = TestModWin.Button_EngCh[Class1.English_En, 10];
      this.button11.Enabled = true;
    }

    private void LookCurComNo()
    {
      this.WriteDataBuf = Class1.ReadFileDataPro(this.GiFilePathName).Split('\r');
      try
      {
        int index = 0;
        while (index < this.comboBox1.Items.Count && !(this.WriteDataBuf[0] == this.comboBox1.Items[index].ToString()))
          ++index;
        if (index >= this.comboBox1.Items.Count)
          this.comboBox1.SelectedIndex = 0;
        else
          this.comboBox1.SelectedIndex = index;
      }
      catch
      {
        string str = this.MessBoxName[Class1.English_En, 17];
      }
    }

    private void GetCurComNo()
    {
      string text = this.comboBox1.Text;
      if (text != "")
      {
        this.CurrentCom = Convert.ToInt32(text.Substring(3, text.Length - 3), 10);
      }
      else
      {
        string str = this.MessBoxName[Class1.English_En, 17];
      }
    }

    public void LoadFileDataDisPro()
    {
      this.GiFilePathName = Class1.MainFilePath + "TestModDef.icf";
      string str1 = Class1.ReadFileDataPro(this.GiFilePathName);
      string StrTemp = "";
      this.WriteDataBuf = str1.Split('\r');
      for (int index = 0; index < this.ConTestWriteDataTm; ++index)
      {
        string str2 = this.WriteDataBuf[index + 3];
        string str3 = str2.Substring(0, 1);
        StrTemp = !(str3 == "\n") && !(str3 == "n") ? StrTemp + str2.Substring(6, str2.Length - 6) : StrTemp + str2.Substring(7, str2.Length - 7);
      }
      this.DisDatatoGridViewXX(3, StrTemp);
    }

    private void TestModWin_Load(object sender, EventArgs e)
    {
      this.Icon = new Icon(Class1.MainFilePath + "logo.ico");
      this.comboBox4.SelectedIndex = 1;
      this.OnlyOneLine = true;
      this.TabControlBuf[0] = 0;
      this.TabControlBuf[1] = 1;
      this.TabControlBuf[2] = 2;
      this.TimerResPro();
      this.groupBox2.Text = "";
      this.load_GroupBox1Pro();
      this.load_GroupBox3Pro();
      this.load_GroupBox4Pro();
      this.load_GroupBox5Pro();
      this.load_GroupBox6Pro();
      Class1.GetTestDefFilePro(this.GiFilePathName);
      this.button3_Click(sender, e);
      this.GetCurComNo();
      this.LoadFileDataDisPro();
      this.CurrtabControl = 0;
    }

    private string GetDataFromGridViewX(
      int Col,
      string[,] ConStrTableX,
      DataGridView DataGridViewName,
      int lenght)
    {
      string dataFromGridViewX = "";
      for (int index = 0; (long) index < ConStrTableX.GetLongLength(0); ++index)
      {
        string str;
        try
        {
          str = DataGridViewName.Rows[index].Cells[Col].Value.ToString();
        }
        catch
        {
          str = "";
        }
        string hexStr = Class1.DataToHexStr((long) Convert.ToInt32(str, 10));
        dataFromGridViewX += hexStr;
      }
      int num1 = 2 * lenght * Class1.ConOneRowDatCt;
      if (dataFromGridViewX.Length < num1)
      {
        int num2 = num1 - dataFromGridViewX.Length;
        for (int index = 0; index < num2; ++index)
          dataFromGridViewX += "0";
      }
      return dataFromGridViewX;
    }

    private string GetDataFromGridView(int Col) => this.GetDataFromGridViewX(Col, this.ConStrTable1, this.dataGridView1, this.ConTestBand1Tm) + this.GetDataFromGridViewX(Col, this.ConStrTable2, this.dataGridView2, this.ConTestBand2Tm) + this.GetDataFromGridViewX(Col, this.ConStrTable3, this.dataGridView3, this.ConTestBand3Tm);

    private void SavDefDataPro()
    {
      this.WriteDataBuf = Class1.ReadFileDataPro(this.GiFilePathName).Split('\r');
      int length = Class1.ConOneRowDatCt * 2;
      for (int index = 0; index < this.ConTestWriteDataTm; ++index)
      {
        string str1 = this.WriteDataBuf[index + 3].Substring(0, 7);
        string str2 = this.GiDefDataBuf.Substring(index * length, length);
        this.WriteDataBuf[index + 3] = str1 + str2;
      }
      Class1.SaveFileDataPro(this.GiFilePathName, this.WriteDataBuf);
    }

    private void SavCurComPro()
    {
      this.WriteDataBuf = Class1.ReadFileDataPro(this.GiFilePathName).Split('\r');
      this.WriteDataBuf[0] = this.comboBox1.Text;
      Class1.SaveFileDataPro(this.GiFilePathName, this.WriteDataBuf);
    }

    public void SaveDataFile(string FileNameTemp)
    {
      string[] StrData = Class1.ReadFileDataPro(this.GiFilePathName).Split('\r');
      Class1.SaveFileDataPro(FileNameTemp, StrData);
    }

    private void SaveDialogFilePro()
    {
    }

    private void button3_Click(object sender, EventArgs e)
    {
      if (this.GbTestMod)
      {
        SaveFileDialog saveFileDialog = new SaveFileDialog();
        saveFileDialog.RestoreDirectory = true;
        saveFileDialog.Filter = "（*.test）|*.test|（*.*）|*.*";
        saveFileDialog.FileName = "TestData";
        if (saveFileDialog.ShowDialog((IWin32Window) this) != DialogResult.OK)
          return;
        this.GiCurrDataBuf = this.GetDataFromGridView(2);
        this.DisDatatoGridViewXX(3, this.GiCurrDataBuf);
        this.GiDefDataBuf = this.GiCurrDataBuf;
        this.SavDefDataPro();
        string giFilePathName = this.GiFilePathName;
        string fileName = saveFileDialog.FileName;
        if (giFilePathName != fileName)
        {
          this.SaveDataFile(fileName);
        }
        else
        {
          string str = this.MessBoxName[Class1.English_En, 18];
        }
      }
      else
      {
        this.comboBox1.Items.Clear();
        for (int index = 1; index <= 64; ++index)
        {
          try
          {
            string str = "COM" + (object) index;
            this.serialPort1.PortName = "COM" + (object) index;
            this.serialPort1.Open();
            this.serialPort1.Close();
            this.comboBox1.Items.Add((object) str);
          }
          catch
          {
          }
        }
        this.LookCurComNo();
        this.comboBox1.DropDownStyle = ComboBoxStyle.DropDownList;
        this.comboBox1.Visible = true;
      }
    }

    private byte OpenWkorkComPro()
    {
      try
      {
        this.serialPort1.BaudRate = Convert.ToInt32(this.BaudRadio, 10);
        this.serialPort1.PortName = "COM" + (object) this.CurrentCom;
        this.serialPort1.Open();
        return 1;
      }
      catch
      {
        int num = (int) MessageBox.Show(this.MessBoxName[Class1.English_En, 0] + (object) this.CurrentCom + this.MessBoxName[Class1.English_En, 1], "RadioName");
        return 0;
      }
    }

    private void ComuDis(object sender, EventArgs e)
    {
      this.listBox1.Items.Add((object) this.ComTempStr);
      this.listBox1.SelectedIndex = this.listBox1.Items.Count - 1;
    }

    private void SendComDatPro1(string TempStr, byte SendByteCt, byte AckByteCt)
    {
      byte[] buffer = new byte[(int) SendByteCt];
      try
      {
        this.ComTempStr = "TX: " + TempStr;
        for (int index = 0; index < (int) SendByteCt; ++index)
        {
          string str = TempStr.Substring(2 * index, 2);
          buffer[index] = Convert.ToByte(str, 16);
        }
        this.SendByte = 0;
        if (Class1.GbOnlyOneLine)
          this.SendByte = (int) SendByteCt;
        this.serialPort1.ReceivedBytesThreshold = (int) AckByteCt + this.SendByte;
        this.serialPort1.Write(buffer, 0, (int) SendByteCt);
        this.TimeRestartPro();
        this.Invoke((Delegate) new EventHandler(this.ComuDis));
      }
      catch
      {
      }
    }

    private void SendComDatPro(string TempStr, int SendByteCt, int AckByteCt)
    {
      byte[] buffer = new byte[SendByteCt];
      try
      {
        Thread.Sleep(this.GbCommDelay);
        this.ComTempStr = "TX: " + TempStr;
        this.Invoke((Delegate) new EventHandler(this.ComuDis));
        for (int index = 0; index < SendByteCt; ++index)
        {
          string str = TempStr.Substring(2 * index, 2);
          buffer[index] = Convert.ToByte(str, 16);
        }
        this.SendByte = 0;
        for (int index = 0; index < 80; ++index)
          this.RxBuffer[index] = (byte) 0;
        if (Class1.GbOnlyOneLine)
          this.SendByte = SendByteCt;
        this.serialPort1.ReceivedBytesThreshold = AckByteCt + this.SendByte;
        this.serialPort1.Write(buffer, 0, SendByteCt);
        this.TimeRestartPro();
      }
      catch
      {
        string str = this.MessBoxName[Class1.English_En, 2] + (object) this.CommuCt;
      }
    }

    private void button1_Click(object sender, EventArgs e)
    {
      try
      {
        this.numericUpDown2.Visible = false;
        this.numericUpDown3.Visible = false;
        if (this.OpenWkorkComPro() == (byte) 0)
          return;
        this.button1.Enabled = false;
        this.GbCommDelay = (int) Convert.ToInt16(this.textBox1.Text, 10);
        Thread.Sleep(200);
        if (this.GbTestMod)
        {
          this.GbTestMod = false;
          this.CommuItem = (byte) 1;
          this.listBox1.Items.Add((object) "/**********************退出测试模式*************************/");
          this.SendComDatPro("FEFEEEEFF155563838000000FD", 13, 7);
        }
        else
        {
          this.CommuItem = (byte) 0;
          this.CommuCt = (byte) 0;
          this.GiCurrDataBuf = "";
          this.IicAddress = this.ConTetBegAdd;
          this.listBox1.Items.Clear();
          this.listBox1.Items.Add((object) "/**********************进入测试模式*************************/");
          this.SendComDatPro("FEFEEEEFF055563838000000FD", 13, 7);
        }
      }
      catch
      {
      }
    }

    private byte GetDataTxRxBytePro(int TxRxCt) => (byte) (13 + TxRxCt);

    private void SendReadDatAddComPro()
    {
      if ((int) this.CommuCt > this.ConTestReadDataTm)
        return;
      this.SendComDatPro("FEFEEEEFEB" + (Class1.DataToStrPro((long) this.IicAddress, 8) + Class1.DataToStrPro((long) this.ConOneTmReadCt, 4)) + "FD", 12, (int) this.GetDataTxRxBytePro(this.ConOneTmReadCt));
      this.IicAddress += this.ConOneTmReadCt;
    }

    private void SendReadAdjDatComPro() => this.SendComDatPro("FEFEEEEFEB" + Class1.StrHexAutoAdd0Pro((long) this.IicAddress, (byte) 8) + "0001FD", 12, (int) this.GetDataTxRxBytePro(1));

    private string GetChkSum_AddrPro(string TempStr1)
    {
      byte[] Data = new byte[this.ConOneTmWriteCt + 3];
      string[] strArray = new string[this.ConOneTmWriteCt + 3];
      for (int index = 0; index < this.ConOneTmWriteCt + 3; ++index)
        strArray[index] = TempStr1.Substring(2 * index, 2);
      for (int index = 0; index < this.ConOneTmWriteCt + 3; ++index)
        Data[index] = Convert.ToByte(strArray[index], 16);
      TempStr1 = Class1.DataToHexStr((long) (byte) (256U - (uint) Class1.GetChkSumPro(Data)));
      return TempStr1;
    }

    private void SendWriteDatAddComPro1(int Temp, int BegLine)
    {
      if ((int) this.CommuCt > Temp)
        return;
      string str1 = this.WriteDataBuf[(int) this.CommuCt + 2 + BegLine];
      string str2;
      if (this.GbWRCurreDataEn)
      {
        int num = (int) this.CommuCt + BegLine - 1;
        int length = Class1.ConOneRowDatCt * 2;
        str2 = this.GiCurrDataBuf.Substring(num * length, length);
      }
      else
        str2 = !(str1.Substring(0, 1) == "\n") && !(str1.Substring(0, 1) == "n") ? str1.Substring(6, str1.Length - 6) : str1.Substring(7, str1.Length - 7);
      this.GiDefDataBuf += str2;
      int num1 = this.GiDefDataBuf.Length / 2;
      string TempStr1 = Class1.StrHexAutoAdd0Pro((long) this.IicAddress, (byte) 8) + Class1.StrHexAutoAdd0Pro((long) (str2.Length / 2), (byte) 4) + str2;
      this.SendComDatPro(Class1.Chga_z_ToA_Z("FEFEEEEFE4" + (TempStr1 + this.GetChkSum_AddrPro(TempStr1)) + "FD"), (int) this.GetDataTxRxBytePro(this.ConOneTmWriteCt), 7);
      this.IicAddress += this.ConOneTmWriteCt;
    }

    private void SendWriteDatAddComPro() => this.SendWriteDatAddComPro1(this.ConTestWriteDataTm, 0);

    private void SendWriteDatAddComPro2()
    {
      switch (this.TabControlBuf[this.CurrtabControl])
      {
        case 0:
          this.SendWriteDatAddComPro1(this.ConTestBand1Tm, 0);
          break;
        case 1:
          this.SendWriteDatAddComPro1(this.ConTestBand2Tm, this.ConTestBand1Tm);
          break;
        case 2:
          this.SendWriteDatAddComPro1(this.ConTestBand3Tm, this.ConTestBand1Tm + this.ConTestBand2Tm);
          break;
      }
    }

    private void ControlResPro() => TestModWin.aTimer1.Enabled = false;

    private void DisOneDatatoGridView(int Col, string StrTemp, int GridViewNum)
    {
      try
      {
        switch (GridViewNum)
        {
          case 0:
            for (int index = 0; (long) index < this.ConStrTable1.GetLongLength(0); ++index)
            {
              int int32 = Convert.ToInt32(StrTemp.Substring(2 * index, 2), 16);
              this.dataGridView1.Rows[index].Cells[Col].Value = (object) int32.ToString();
            }
            break;
          case 1:
            for (int index = 0; (long) index < this.ConStrTable2.GetLongLength(0); ++index)
            {
              int int32 = Convert.ToInt32(StrTemp.Substring(2 * index, 2), 16);
              this.dataGridView2.Rows[index].Cells[Col].Value = (object) int32.ToString();
            }
            break;
          case 2:
            for (int index = 0; (long) index < this.ConStrTable3.GetLongLength(0); ++index)
            {
              int int32 = Convert.ToInt32(StrTemp.Substring(2 * index, 2), 16);
              this.dataGridView3.Rows[index].Cells[Col].Value = (object) int32.ToString();
            }
            break;
        }
      }
      catch
      {
        int num = (int) MessageBox.Show("表格列" + (object) Col + "数据异常", Class1.RadioName);
      }
    }

    private void DisDatatoGridViewXX(int Col, string StrTemp)
    {
      try
      {
        this.DisOneDatatoGridView(Col, StrTemp, 0);
        StrTemp = StrTemp.Substring(2 * Class1.ConOneRowDatCt * this.ConTestBand1Tm, StrTemp.Length - 2 * Class1.ConOneRowDatCt * this.ConTestBand1Tm);
        this.DisOneDatatoGridView(Col, StrTemp, 1);
        StrTemp = StrTemp.Substring(2 * Class1.ConOneRowDatCt * this.ConTestBand2Tm, 2 * Class1.ConOneRowDatCt * this.ConTestBand3Tm);
        this.DisOneDatatoGridView(Col, StrTemp, 2);
      }
      catch
      {
        int num = (int) MessageBox.Show("表格列" + (object) Col + "数据异常", Class1.RadioName);
      }
    }

    private void SetCommuFailPro()
    {
      this.ComFail = true;
      this.Invoke((Delegate) new EventHandler(this.CtrLResAllPro));
    }

    private void DisplayText(object sender, EventArgs e)
    {
      string strTest = "";
      this.ComFail = false;
      try
      {
        this.TimeRestartPro();
        for (int index = 0; index < this.serialPort1.ReceivedBytesThreshold; ++index)
        {
          string hexStr = Class1.DataToHexStr((long) this.RxBuffer[index]);
          strTest += hexStr;
        }
        string aZ = Class1.Chga_z_ToA_Z(strTest);
        this.ComTempStr = "RX: " + aZ;
        this.Invoke((Delegate) new EventHandler(this.ComuDis));
        string str1 = aZ.Substring(2 * this.SendByte, aZ.Length - 2 * this.SendByte);
        if (str1.Substring(str1.Length - 2, 2) != "FD")
          this.SetCommuFailPro();
        switch (this.CommuItem)
        {
          case 0:
            if ((byte) 0 == this.CommuCt)
            {
              if (str1.Substring(0, 14) == "FEFEEFEEE600FD")
              {
                ++this.CommuCt;
                this.IicAddress = this.ConTetBegAdd;
                break;
              }
              this.SetCommuFailPro();
              if (this.ComFail)
              {
                int num = (int) MessageBox.Show("DisplayText通信失败" + (object) this.CommuItem + (object) this.CommuCt, Class1.RadioName);
              }
              break;
            }
            if (str1.Substring(0, 10) == "FEFEEFEEE4")
            {
              this.GiCurrDataBuf += str1.Substring(22, str1.Length - 26);
              ++this.CommuCt;
              if ((int) this.CommuCt > this.ConTestReadDataTm)
              {
                this.GbTestMod = true;
                this.DisDatatoGridViewXX(2, this.GiCurrDataBuf);
                TestModWin.aTimer1.Enabled = false;
                this.button1.Text = "退出测试模式";
                this.button1.Enabled = true;
                this.button9.Enabled = true;
                this.button10.Enabled = true;
                this.button2.Enabled = true;
                this.button3.Text = "保存为默认值";
                this.GbAtLineMod = false;
                this.dataGridView1.Focus();
              }
            }
            else
            {
              this.SetCommuFailPro();
              if (this.ComFail)
              {
                int num = (int) MessageBox.Show("DisplayText通信失败" + (object) this.CommuItem + (object) this.CommuCt, Class1.RadioName);
              }
            }
            break;
          case 1:
            if (str1.Substring(0, 14) == "FEFEEFEEE600FD")
            {
              TestModWin.aTimer1.Enabled = false;
              this.Invoke((Delegate) new EventHandler(this.CtrLResAllPro));
              this.GbAtLineMod = false;
              this.button1.Focus();
              break;
            }
            this.SetCommuFailPro();
            if (this.ComFail)
            {
              int num1 = (int) MessageBox.Show("DisplayText通信失败" + (object) this.CommuItem + (object) this.CommuCt, Class1.RadioName);
            }
            break;
          case 2:
            if (str1.Substring(0, 14) == "FEFEEFEEE600FD")
            {
              ++this.CommuCt;
              if ((int) this.CommuCt <= this.ConTestWriteDataTm + 2)
                break;
              this.DisDatatoGridViewXX(2, this.GiDefDataBuf);
              TestModWin.aTimer1.Enabled = false;
              this.GbAtLineMod = false;
              this.dataGridView1.Focus();
              break;
            }
            this.SetCommuFailPro();
            if (this.ComFail)
            {
              int num2 = (int) MessageBox.Show("DisplayText通信失败" + (object) this.CommuItem + (object) this.CommuCt, Class1.RadioName);
            }
            break;
          case 3:
            if (str1.Substring(0, 14) == "FEFEEFEEE600FD")
            {
              TestModWin.aTimer1.Enabled = false;
              this.button4.Enabled = true;
              this.button5.Enabled = true;
              this.button6.Enabled = true;
              this.numericUpDown1.Enabled = true;
              this.trackBar1.Enabled = true;
              this.button7.Enabled = false;
              this.numericUpDown1.Value = (Decimal) this.CurrAdjData;
              this.trackBar1.Value = this.CurrAdjData;
              this.GbAtLineMod = false;
              this.trackBar1.Focus();
              break;
            }
            this.SetCommuFailPro();
            if (this.ComFail)
            {
              int num3 = (int) MessageBox.Show("DisplayText通信失败" + (object) this.CommuItem + (object) this.CommuCt, Class1.RadioName);
            }
            break;
          case 4:
            if (str1.Substring(0, 14) == "FEFEEFEEE600FD")
            {
              ++this.CommuCt;
              if (this.CommuCt > (byte) 1)
              {
                TestModWin.aTimer1.Enabled = false;
                this.button4.Enabled = false;
                this.button5.Enabled = false;
                this.button6.Enabled = false;
                this.button7.Enabled = false;
                this.numericUpDown1.Enabled = false;
                this.trackBar1.Enabled = false;
                this.GbAtLineMod = false;
                this.dataGridView1.Focus();
                switch (this.TabControlBuf[this.CurrtabControl])
                {
                  case 0:
                    this.dataGridView1[2, this.CurrAdjItem].Value = (object) this.CurrAdjData;
                    this.dataGridView1.Focus();
                    return;
                  case 1:
                    this.dataGridView2[2, this.CurrAdjItem].Value = (object) this.CurrAdjData;
                    this.dataGridView2.Focus();
                    return;
                  case 2:
                    this.dataGridView3[2, this.CurrAdjItem].Value = (object) this.CurrAdjData;
                    this.dataGridView3.Focus();
                    return;
                  default:
                    return;
                }
              }
              else
              {
                this.numericUpDown1.Value = (Decimal) this.CurrAdjData;
                this.trackBar1.Value = this.CurrAdjData;
                break;
              }
            }
            else
            {
              this.SetCommuFailPro();
              if (this.ComFail)
              {
                int num4 = (int) MessageBox.Show("DisplayText通信失败" + (object) this.CommuItem + (object) this.CommuCt, Class1.RadioName);
              }
              break;
            }
          case 5:
            if (str1.Substring(0, 14) == "FEFEEFEEE600FD")
            {
              TestModWin.aTimer1.Enabled = false;
              this.button6.Enabled = false;
              this.button7.Enabled = true;
              this.GbAtLineMod = false;
              break;
            }
            this.SetCommuFailPro();
            if (this.ComFail)
            {
              int num5 = (int) MessageBox.Show("DisplayText通信失败" + (object) this.CommuItem + (object) this.CommuCt, Class1.RadioName);
            }
            break;
          case 6:
            if (str1.Substring(0, 14) == "FEFEEFEEE600FD")
            {
              TestModWin.aTimer1.Enabled = false;
              this.button7.Enabled = false;
              this.button6.Enabled = true;
              this.GbAtLineMod = false;
              break;
            }
            this.SetCommuFailPro();
            if (this.ComFail)
            {
              int num6 = (int) MessageBox.Show("DisplayText通信失败" + (object) this.CommuItem + (object) this.CommuCt, Class1.RadioName);
            }
            break;
          case 7:
            if ((byte) 0 == this.CommuCt)
            {
              if (str1.Substring(0, 14) == "FEFEEFEEE600FD")
              {
                ++this.CommuCt;
                switch (this.TabControlBuf[this.CurrtabControl])
                {
                  case 0:
                    this.IicAddress = this.ConTetBegAdd + this.CurrAdjItem;
                    return;
                  case 1:
                    this.IicAddress = this.ConTetBegAdd + this.CurrAdjItem + 32 * this.ConTestBand1Tm;
                    return;
                  case 2:
                    this.IicAddress = this.ConTetBegAdd + this.CurrAdjItem + 32 * this.ConTestBand1Tm + 32 * this.ConTestBand2Tm;
                    return;
                  default:
                    return;
                }
              }
              else
              {
                this.SetCommuFailPro();
                if (this.ComFail)
                {
                  int num7 = (int) MessageBox.Show("DisplayText通信失败" + (object) this.CommuItem + (object) this.CommuCt, Class1.RadioName);
                }
                break;
              }
            }
            else
            {
              if (str1.Substring(0, 10) == "FEFEEFEEE4")
              {
                string str2 = str1.Substring(10, str1.Length - 12);
                string str3 = str2.Substring(12, str2.Length - 14);
                ++this.CommuCt;
                if (this.CommuCt > (byte) 1)
                {
                  int int32 = Convert.ToInt32(str3, 16);
                  switch (this.TabControlBuf[this.CurrtabControl])
                  {
                    case 0:
                      this.dataGridView1[2, this.CurrAdjItem].Value = (object) int32.ToString();
                      break;
                    case 1:
                      this.dataGridView2[2, this.CurrAdjItem].Value = (object) int32.ToString();
                      break;
                    case 2:
                      this.dataGridView3[2, this.CurrAdjItem].Value = (object) int32.ToString();
                      break;
                  }
                  TestModWin.aTimer1.Enabled = false;
                  this.button4.Enabled = false;
                  this.button5.Enabled = false;
                  this.button6.Enabled = false;
                  this.button7.Enabled = false;
                  this.numericUpDown1.Enabled = false;
                  this.trackBar1.Enabled = false;
                  this.GbAtLineMod = false;
                }
              }
              else
              {
                this.SetCommuFailPro();
                if (this.ComFail)
                {
                  int num8 = (int) MessageBox.Show("DisplayText通信失败" + (object) this.CommuItem + (object) this.CommuCt, Class1.RadioName);
                }
              }
              break;
            }
          case 8:
            if (str1.Substring(0, 14) == "FEFEEFEEE600FD")
            {
              ++this.CommuCt;
              if ((int) this.CommuCt <= this.GiTestWriteDataTm + 2)
                break;
              this.DisOneDatatoGridView(2, this.GiDefDataBuf, this.tabControl1.SelectedIndex);
              TestModWin.aTimer1.Enabled = false;
              this.GbAtLineMod = false;
              this.dataGridView1.Focus();
              break;
            }
            this.SetCommuFailPro();
            if (this.ComFail)
            {
              int num9 = (int) MessageBox.Show("DisplayText通信失败" + (object) this.CommuItem + (object) this.CommuCt, Class1.RadioName);
            }
            break;
        }
      }
      catch
      {
        this.SetCommuFailPro();
      }
    }

    private void serialPort1_DataReceived(object sender, SerialDataReceivedEventArgs e)
    {
      if (this.serialPort1.ReceivedBytesThreshold != this.serialPort1.BytesToRead)
        return;
      this.serialPort1.Read(this.RxBuffer, 0, this.serialPort1.ReceivedBytesThreshold);
      this.GbAtLineMod = true;
      this.Invoke((Delegate) new EventHandler(this.DisplayText));
      if (this.ComFail)
        this.serialPort1.Close();
      else if (!this.GbAtLineMod)
      {
        this.GbItemAjdEn = false;
        this.serialPort1.Close();
      }
      else
      {
        this.GbAtLineMod = false;
        switch (this.CommuItem)
        {
          case 0:
            this.SendReadDatAddComPro();
            break;
          case 2:
            if ((int) this.CommuCt == this.ConTestWriteDataTm + 1)
            {
              this.SendComDatPro("FEFEEEEFF755563838000000FD", 13, 7);
              break;
            }
            if ((int) this.CommuCt == this.ConTestWriteDataTm + 2)
            {
              this.SendComDatPro("FEFEEEEFF155563838000000FD", 13, 7);
              break;
            }
            this.SendWriteDatAddComPro();
            break;
          case 4:
            if (this.CommuCt == (byte) 1)
            {
              this.SendComDatPro("FEFEEEEFF355563838093039FD", 13, 7);
              break;
            }
            break;
          case 7:
            if (this.CommuCt == (byte) 1)
            {
              this.SendReadAdjDatComPro();
              break;
            }
            break;
          case 8:
            if ((int) this.CommuCt == this.GiTestWriteDataTm + 1)
            {
              this.SendComDatPro("FEFEEEEFF755563838000000FD", 13, 7);
              break;
            }
            if ((int) this.CommuCt == this.GiTestWriteDataTm + 2)
            {
              this.SendComDatPro("FEFEEEEFF155563838000000FD", 13, 7);
              break;
            }
            this.SendWriteDatAddComPro2();
            break;
        }
      }
    }

    private void button2_Click(object sender, EventArgs e)
    {
      try
      {
        this.numericUpDown2.Visible = false;
        this.numericUpDown3.Visible = false;
        if (this.OpenWkorkComPro() == (byte) 0)
          return;
        this.GbCommDelay = (int) Convert.ToInt16(this.textBox1.Text, 10);
        this.CommuCt = (byte) 0;
        this.CommuItem = (byte) 2;
        Thread.Sleep(200);
        this.GbWRCurreDataEn = false;
        this.GiDefDataBuf = "";
        this.IicAddress = this.ConTetBegAdd;
        this.listBox1.Items.Add((object) "/**********************批写测试模式*************************/");
        this.SendComDatPro("FEFEEEEFF255563838000000FD", 13, 7);
      }
      catch
      {
      }
    }

    private void button6_Click(object sender, EventArgs e)
    {
      try
      {
        this.numericUpDown2.Visible = false;
        this.numericUpDown3.Visible = false;
        byte num = this.OpenWkorkComPro();
        Thread.Sleep(200);
        if (num == (byte) 0)
          return;
        string TempStr = "FEFEEEEFF4555638" + this.GetAdjItemDataPro1(this.numericUpDown1.Value.ToString()) + "FD";
        this.CommuItem = (byte) 5;
        this.listBox1.Items.Add((object) "/**** PTT  发射  *************************/");
        this.SendComDatPro(TempStr, 13, 7);
      }
      catch
      {
      }
    }

    private void button7_Click(object sender, EventArgs e)
    {
      try
      {
        this.numericUpDown2.Visible = false;
        this.numericUpDown3.Visible = false;
        byte num = this.OpenWkorkComPro();
        Thread.Sleep(200);
        if (num == (byte) 0)
          return;
        string TempStr = "FEFEEEEFF5555638" + this.GetAdjItemDataPro1(this.numericUpDown1.Value.ToString()) + "FD";
        this.CommuItem = (byte) 6;
        this.listBox1.Items.Add((object) "/**** PTT  取消发射  *************************/");
        this.SendComDatPro(TempStr, 13, 7);
      }
      catch
      {
      }
    }

    private void button4_Click(object sender, EventArgs e)
    {
      this.numericUpDown2.Visible = false;
      this.numericUpDown3.Visible = false;
      if (this.GbItemAjdEn)
        return;
      try
      {
        byte num = this.OpenWkorkComPro();
        Thread.Sleep(200);
        if (num == (byte) 0)
          return;
        this.CommuItem = (byte) 4;
        this.CommuCt = (byte) 1;
        this.listBox1.Items.Add((object) "/**********************退出当前调试选项*************************/");
        this.SendComDatPro("FEFEEEEFF355563838093039FD", 13, 7);
      }
      catch
      {
      }
    }

    private void button5_Click(object sender, EventArgs e)
    {
      string str = "";
      this.numericUpDown2.Visible = false;
      this.numericUpDown3.Visible = false;
      DataGridView dataGridViewName = this.dataGridView1;
      try
      {
        byte num = this.OpenWkorkComPro();
        Thread.Sleep(200);
        if (num == (byte) 0)
          return;
        this.CommuItem = (byte) 4;
        this.CommuCt = (byte) 0;
        switch (this.TabControlBuf[this.CurrtabControl])
        {
          case 0:
            dataGridViewName = this.dataGridView1;
            str = "30";
            break;
          case 1:
            dataGridViewName = this.dataGridView2;
            str = "31";
            break;
          case 2:
            dataGridViewName = this.dataGridView3;
            str = "32";
            break;
        }
        string adjItemDataPro = this.GetAdjItemDataPro(dataGridViewName);
        string TempStr = "FEFEEEEFFA5556" + str + adjItemDataPro + "FD";
        this.listBox1.Items.Add((object) "/**********************退出当前调试选项*************************/");
        this.SendComDatPro(TempStr, 13, 7);
      }
      catch
      {
      }
    }

    private string GetAdjItemDataPro1(string StrTemp)
    {
      try
      {
        this.CurrAdjData = Convert.ToInt32(StrTemp, 10);
      }
      catch
      {
        int num = (int) MessageBox.Show("GetAdjItemDataPro1_数据非法", Class1.RadioName);
        this.CurrAdjData = 0;
      }
      StrTemp = Class1.StrHexAutoAdd0Pro((long) this.CurrAdjItem, (byte) 4);
      string ascii = Class1.StrToAscii(Class1.DataToHexStr((long) this.CurrAdjData));
      StrTemp += ascii;
      return StrTemp;
    }

    private string GetAdjItemDataPro(DataGridView dataGridViewName)
    {
      int index = dataGridViewName.CurrentRow.Index;
      string StrTemp = dataGridViewName[2, index].Value.ToString();
      this.CurrAdjItem = index;
      return this.GetAdjItemDataPro1(StrTemp);
    }

    private void EntItemComAllPro(DataGridView dataGridViewName, int dataGridnum)
    {
      string str = "";
      if (!this.GbTestMod)
        return;
      try
      {
        byte num = this.OpenWkorkComPro();
        Thread.Sleep(200);
        if (num == (byte) 0)
          return;
        int index = dataGridViewName.CurrentRow.Index;
        switch (dataGridnum)
        {
          case 0:
            str = "30";
            this.ConStrTable = this.ConStrTable1;
            break;
          case 1:
            str = "31";
            this.ConStrTable = this.ConStrTable2;
            break;
          case 2:
            str = "32";
            this.ConStrTable = this.ConStrTable3;
            break;
        }
        string adjItemDataPro = this.GetAdjItemDataPro(dataGridViewName);
        string TempStr = "FEFEEEEFFA5556" + str + adjItemDataPro + "FD";
        if (this.ConStrTable[this.CurrAdjItem, 5] == "是")
        {
          this.CommuItem = (byte) 7;
          this.CommuCt = (byte) 0;
          this.listBox1.Items.Add((object) ("/****相应调试选项:  " + (object) this.CurrAdjItem + "  调试数值:  " + (object) this.CurrAdjData + "  *************************/"));
        }
        else
        {
          this.CommuItem = (byte) 3;
          this.listBox1.Items.Add((object) ("/****相应调试选项:  " + (object) this.CurrAdjItem + "  调试数值:  " + (object) this.CurrAdjData + "  *************************/"));
        }
        this.SendComDatPro(TempStr, 13, 7);
      }
      catch
      {
      }
    }

    private void dataGridView1_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
    {
      int index = this.dataGridView1.CurrentRow.Index;
      if (index < this.ConStrTable1ListNum[2] || index >= this.ConStrTable1ListNum[3])
        return;
      this.EntItemComAllPro(this.dataGridView1, 0);
    }

    private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
    {
      this.GetCurComNo();
      this.SavCurComPro();
    }

    private void numericUpDown1_ValueChanged(object sender, EventArgs e)
    {
      string str = "";
      if (this.numericUpDown1.Value == (Decimal) this.CurrAdjData)
        return;
      if (this.GbItemAjdEn)
      {
        this.numericUpDown1.Value = (Decimal) this.CurrAdjData;
      }
      else
      {
        if (this.serialPort1.IsOpen)
          return;
        try
        {
          this.serialPort1.Open();
          this.GbItemAjdEn = true;
          string adjItemDataPro1 = this.GetAdjItemDataPro1(this.numericUpDown1.Value.ToString());
          switch (this.TabControlBuf[this.CurrtabControl])
          {
            case 0:
              str = "30";
              break;
            case 1:
              str = "31";
              break;
            case 2:
              str = "32";
              break;
          }
          string TempStr = "FEFEEEEFFA5556" + str + adjItemDataPro1 + "FD";
          this.CommuItem = (byte) 3;
          this.listBox1.Items.Add((object) ("/****进入相应调试选项:  " + (object) this.CurrAdjItem + "  调试数值:  " + (object) this.CurrAdjData + "  *************************/"));
          Thread.Sleep(100);
          this.SendComDatPro(TempStr, 13, 7);
        }
        catch
        {
        }
      }
    }

    private void trackBar1_ValueChanged(object sender, EventArgs e)
    {
      string str = "";
      if (this.trackBar1.Value == this.CurrAdjData)
        return;
      if (this.GbItemAjdEn)
      {
        this.trackBar1.Value = this.CurrAdjData;
      }
      else
      {
        if (this.serialPort1.IsOpen)
          return;
        try
        {
          this.serialPort1.Open();
          Thread.Sleep(100);
          this.GbItemAjdEn = true;
          string adjItemDataPro1 = this.GetAdjItemDataPro1(this.trackBar1.Value.ToString());
          switch (this.TabControlBuf[this.CurrtabControl])
          {
            case 0:
              str = "30";
              break;
            case 1:
              str = "31";
              break;
            case 2:
              str = "32";
              break;
          }
          string TempStr = "FEFEEEEFFA5556" + str + adjItemDataPro1 + "FD";
          this.CommuItem = (byte) 3;
          this.listBox1.Items.Add((object) "/**********************进入相应调试选项及调试数值*************************/");
          this.SendComDatPro(TempStr, 13, 7);
        }
        catch
        {
        }
      }
    }

    private void trackBar1_KeyPress(object sender, KeyPressEventArgs e)
    {
      if (e.KeyChar == '\r')
      {
        this.button4_Click(sender, (EventArgs) e);
      }
      else
      {
        if (e.KeyChar != '\u001B')
          return;
        this.button5_Click(sender, (EventArgs) e);
      }
    }

    private void dataGridView1_KeyPress(object sender, KeyPressEventArgs e)
    {
      if (e.KeyChar != '\r')
        return;
      this.EntItemComAllPro(this.dataGridView1, 0);
    }

    private void button8_Click(object sender, EventArgs e) => this.Close();

    private void TestModWin_FormClosed(object sender, FormClosedEventArgs e)
    {
      try
      {
        this.numericUpDown2.Visible = false;
        this.numericUpDown3.Visible = false;
        if (this.GbTestMod)
        {
          byte num = this.OpenWkorkComPro();
          Thread.Sleep(200);
          if (num == (byte) 0)
            return;
          this.GbTestMod = false;
          this.CommuItem = (byte) 1;
          byte[] buffer = new byte[13];
          for (int index = 0; index < 13; ++index)
          {
            string str = "FEFEEEEFF155563838000000FD".Substring(2 * index, 2);
            buffer[index] = Convert.ToByte(str, 16);
          }
          this.serialPort1.ReceivedBytesThreshold = 50;
          this.serialPort1.Write(buffer, 0, 13);
          do
            ;
          while ((byte) this.serialPort1.BytesToWrite != (byte) 0);
          this.serialPort1.Close();
        }
      }
      catch
      {
      }
    }

    private void tabControl1_SelectedIndexChanged(object sender, EventArgs e) => this.CurrtabControl = this.tabControl1.SelectedIndex;

    private void comboBox4_SelectedIndexChanged(object sender, EventArgs e)
    {
      if (1 == this.comboBox4.SelectedIndex)
        this.OnlyOneLine = false;
      else
        this.OnlyOneLine = true;
    }

    private void dataGridView2_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
    {
      int index = this.dataGridView2.CurrentRow.Index;
      if (index < this.ConStrTable2ListNum[2] || index >= this.ConStrTable2ListNum[3])
        return;
      this.EntItemComAllPro(this.dataGridView2, 1);
    }

    private void dataGridView3_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
    {
      int index = this.dataGridView3.CurrentRow.Index;
      if (index < this.ConStrTable3ListNum[2] || index >= this.ConStrTable3ListNum[3])
        return;
      this.EntItemComAllPro(this.dataGridView3, 2);
    }

    private void WriteCurBand(bool CurrentDataEn)
    {
      try
      {
        byte num = this.OpenWkorkComPro();
        Thread.Sleep(200);
        if (num == (byte) 0)
          return;
        this.CommuCt = (byte) 0;
        this.CommuItem = (byte) 8;
        this.GbWRCurreDataEn = CurrentDataEn;
        switch (this.TabControlBuf[this.CurrtabControl])
        {
          case 0:
            this.IicAddress = this.ConTetBegAdd;
            this.GiTestWriteDataTm = this.ConTestBand1Tm;
            break;
          case 1:
            this.IicAddress = this.ConTetBegAdd + 32 * this.ConTestBand1Tm;
            this.GiTestWriteDataTm = this.ConTestBand2Tm;
            break;
          case 2:
            this.IicAddress = this.ConTetBegAdd + 32 * this.ConTestBand1Tm + 32 * this.ConTestBand2Tm;
            this.GiTestWriteDataTm = this.ConTestBand3Tm;
            break;
        }
        this.GiDefDataBuf = "";
        this.listBox1.Items.Add((object) "/**********************批写当前频段测试模式*************************/");
        this.SendComDatPro("FEFEEEEFF255563838000000FD", 13, 7);
      }
      catch
      {
      }
    }

    private void button9_Click(object sender, EventArgs e)
    {
      this.numericUpDown2.Visible = false;
      this.numericUpDown3.Visible = false;
      this.GbCommDelay = (int) Convert.ToInt16(this.textBox1.Text, 10);
      this.WriteCurBand(false);
    }

    private void dataGridView2_KeyPress(object sender, KeyPressEventArgs e)
    {
      if (e.KeyChar != '\r')
        return;
      this.EntItemComAllPro(this.dataGridView2, 1);
    }

    private void dataGridView3_KeyPress(object sender, KeyPressEventArgs e)
    {
      if (e.KeyChar != '\r')
        return;
      this.EntItemComAllPro(this.dataGridView3, 2);
    }

    private void TextBoxResPro(NumericUpDown numericUpDo, int length, string name)
    {
      try
      {
        int int16 = (int) Convert.ToInt16(name, 10);
        numericUpDo.Value = (Decimal) int16;
        numericUpDo.TextAlign = HorizontalAlignment.Center;
        numericUpDo.Visible = true;
      }
      catch
      {
      }
    }

    private string GetCurrCellText(DataGridView dataGridVi)
    {
      string currCellText;
      try
      {
        int rowIndex = dataGridVi.SelectedCells[0].RowIndex;
        int columnIndex = dataGridVi.SelectedCells[0].ColumnIndex;
        currCellText = dataGridVi[columnIndex, rowIndex].Value.ToString();
      }
      catch
      {
        currCellText = "";
      }
      return currCellText;
    }

    private void FreEditPro(
      DataGridView dataGridVi,
      NumericUpDown numericUpDow,
      char KeyDat,
      bool TempBit)
    {
      Rectangle displayRectangle = dataGridVi.GetCellDisplayRectangle(dataGridVi.CurrentCell.ColumnIndex, dataGridVi.CurrentCell.RowIndex, false);
      numericUpDow.Left = displayRectangle.Left + 3;
      numericUpDow.Top = displayRectangle.Top + 3;
      numericUpDow.Width = displayRectangle.Width;
      numericUpDow.Height = displayRectangle.Height;
      numericUpDow.TextAlign = HorizontalAlignment.Center;
      numericUpDow.Visible = true;
      numericUpDow.Focus();
      string name = !TempBit ? this.GetCurrCellText(dataGridVi) : (KeyDat < '0' || KeyDat > '9' ? this.GetCurrCellText(dataGridVi) : KeyDat.ToString());
      this.TextBoxResPro(numericUpDow, 9, name);
    }

    private void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)
    {
      if (this.dataGridView1.CurrentCell.ColumnIndex == 2)
        this.FreEditPro(this.dataGridView1, this.numericUpDown2, '\r', false);
      else
        this.numericUpDown2.Visible = false;
    }

    private void dataGridView3_CellClick(object sender, DataGridViewCellEventArgs e)
    {
      if (this.dataGridView3.CurrentCell.ColumnIndex == 2)
        this.FreEditPro(this.dataGridView3, this.numericUpDown3, '\r', false);
      else
        this.numericUpDown3.Visible = false;
    }

    private void numericUpDown3_Leave(object sender, EventArgs e)
    {
      if (!this.GbAutoAdd)
        this.dataGridView3.Rows[this.dataGridView3.CurrentCell.RowIndex].Cells[this.dataGridView3.CurrentCell.ColumnIndex].Value = (object) this.numericUpDown3.Value.ToString();
      else
        this.numericUpDownX_Leave(this.dataGridView3, this.numericUpDown3, this.ConStrTable03Num);
    }

    private void numericUpDownX_Leave(
      DataGridView dataGridViewx,
      NumericUpDown NumericUpDownX,
      int[] ConStrTableXNum)
    {
      int rowIndex = dataGridViewx.CurrentCell.RowIndex;
      string str = NumericUpDownX.Value.ToString();
      dataGridViewx.Rows[rowIndex].Cells[dataGridViewx.CurrentCell.ColumnIndex].Value = (object) NumericUpDownX.Value.ToString();
      int index1 = 0;
      while (rowIndex >= ConStrTableXNum[index1])
        ++index1;
      int index2 = index1 == 0 ? 0 : index1 - 1;
      int num1 = ConStrTableXNum[index2];
      if (ConStrTableXNum[index1] == ConStrTableXNum[index2])
        num1 = 0;
      int num2 = ConStrTableXNum[index1] - num1;
      for (int index3 = 0; index3 < num2; ++index3)
        dataGridViewx.Rows[num1 + index3].Cells[dataGridViewx.CurrentCell.ColumnIndex].Value = (object) str;
      NumericUpDownX.Visible = false;
    }

    private void numericUpDown2_Leave(object sender, EventArgs e)
    {
      if (!this.GbAutoAdd)
        this.dataGridView1.Rows[this.dataGridView1.CurrentCell.RowIndex].Cells[this.dataGridView1.CurrentCell.ColumnIndex].Value = (object) this.numericUpDown2.Value.ToString();
      else
        this.numericUpDownX_Leave(this.dataGridView1, this.numericUpDown2, this.ConStrTable01Num);
    }

    private void button10_Click(object sender, EventArgs e)
    {
      this.numericUpDown2.Visible = false;
      this.numericUpDown3.Visible = false;
      this.GiCurrDataBuf = this.GetDataFromGridView(2);
      this.GbCommDelay = (int) Convert.ToInt16(this.textBox1.Text, 10);
      this.WriteCurBand(true);
    }

    private void button11_Click(object sender, EventArgs e)
    {
      this.openFileDialog1.CheckFileExists = true;
      this.openFileDialog1.CheckPathExists = true;
      this.openFileDialog1.Multiselect = true;
      this.openFileDialog1.ReadOnlyChecked = true;
      this.openFileDialog1.ShowHelp = true;
      this.openFileDialog1.Filter = "（*.Test）|*.Test|（*.*）|*.*";
      this.openFileDialog1.FileName = "TestData";
      int num = (int) this.openFileDialog1.ShowDialog();
    }

    private void SaveAllDataToTestFile1(string FileNameTemp)
    {
      string[] strArray = Class1.ReadFileDataPro(FileNameTemp).Split('\r');
      string[] StrData = Class1.ReadFileDataPro(this.GiFilePathName).Split('\r');
      int num = StrData.GetLength(0) - 1;
      int index1;
      for (index1 = strArray.GetLength(0) - 1; index1 != 0; --index1)
      {
        string str = strArray[index1];
        if (str.Length != 0 && str != "\n" && str != "n")
          break;
      }
      if (num >= index1)
      {
        for (int index2 = 0; index2 < index1; ++index2)
          StrData[index2] = strArray[index2];
      }
      Class1.SaveFileDataPro(Class1.MainFilePath + "TestModDef.icf", StrData);
      this.LoadFileDataDisPro();
    }

    private void openFileDialog1_FileOk(object sender, CancelEventArgs e) => this.SaveAllDataToTestFile1(this.openFileDialog1.FileName);

    private void radioButton2_CheckedChanged(object sender, EventArgs e)
    {
      if (this.radioButton2.Checked)
        this.GbAutoAdd = true;
      else
        this.GbAutoAdd = false;
    }

    private void radioButton1_CheckedChanged(object sender, EventArgs e)
    {
    }

    private void label1_DoubleClick(object sender, EventArgs e)
    {
      if (this.label32.Enabled)
      {
        this.label32.Enabled = false;
        this.label32.Visible = false;
        this.textBox1.Enabled = false;
        this.textBox1.Visible = false;
      }
      else
      {
        this.label32.Enabled = true;
        this.label32.Visible = true;
        this.textBox1.Enabled = true;
        this.textBox1.Visible = true;
      }
    }

    private void dataGridView2_CellClick(object sender, DataGridViewCellEventArgs e)
    {
      if (this.dataGridView2.CurrentCell.ColumnIndex == 2)
        this.FreEditPro(this.dataGridView2, this.numericUpDown4, '\r', false);
      else
        this.numericUpDown4.Visible = false;
    }

    private void numericUpDown4_Leave(object sender, EventArgs e)
    {
      if (!this.GbAutoAdd)
        this.dataGridView2.Rows[this.dataGridView2.CurrentCell.RowIndex].Cells[this.dataGridView2.CurrentCell.ColumnIndex].Value = (object) this.numericUpDown4.Value.ToString();
      else
        this.numericUpDownX_Leave(this.dataGridView2, this.numericUpDown4, this.ConStrTable02Num);
    }
  }
}
